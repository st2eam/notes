import{_ as i,c as a,a2 as n,o as t}from"./chunks/framework.BW-ZVgUE.js";const g=JSON.parse('{"title":"文档对象模型（DOM）","description":"","frontmatter":{},"headers":[],"relativePath":"Web/JavaScript/DOM.md","filePath":"Web/JavaScript/DOM.md"}'),l={name:"Web/JavaScript/DOM.md"};function h(e,s,p,k,d,E){return t(),a("div",null,s[0]||(s[0]=[n(`<h1 id="文档对象模型-dom" tabindex="-1">文档对象模型（DOM） <a class="header-anchor" href="#文档对象模型-dom" aria-label="Permalink to &quot;文档对象模型（DOM）&quot;">​</a></h1><blockquote><p>通过 HTML DOM，JavaScript 能够访问和改变 HTML 文档的所有元素。</p></blockquote><p>当网页被加载时，浏览器会创建页面的文档对象模型（Document Object Model）。</p><p>HTML DOM 模型被结构化为对象树： <img src="https://www.runoob.com/images/htmltree.gif" alt="image"> 通过这个对象模型，JavaScript 获得创建动态 HTML 的所有力量：</p><ul><li>JavaScript 能改变页面中的所有 HTML 元素</li><li>JavaScript 能改变页面中的所有 HTML 属性</li><li>JavaScript 能改变页面中的所有 CSS 样式</li><li>JavaScript 能删除已有的 HTML 元素和属性</li><li>JavaScript 能添加新的 HTML 元素和属性</li><li>JavaScript 能对页面中所有已有的 HTML 事件作出反应</li><li>JavaScript 能在页面中创建新的 HTML 事件</li></ul><p>HTML DOM 方法是您能够（在 HTML 元素上）执行的动作。</p><p>HTML DOM 属性是您能够设置或改变的 HTML 元素的值。</p><h2 id="html-dom-方法" tabindex="-1">HTML DOM 方法 <a class="header-anchor" href="#html-dom-方法" aria-label="Permalink to &quot;HTML DOM 方法&quot;">​</a></h2><h3 id="查找-html-元素" tabindex="-1">查找 HTML 元素 <a class="header-anchor" href="#查找-html-元素" aria-label="Permalink to &quot;查找 HTML 元素&quot;">​</a></h3><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">document.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getElementById</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(id)    </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//通过元素 id 来查找元素</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">document.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getElementsByTagName</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(name)    </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//通过标签名来查找元素</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">document.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getElementsByClassName</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(name) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//通过类名来查找元素</span></span></code></pre></div><h3 id="改变html元素" tabindex="-1">改变HTML元素 <a class="header-anchor" href="#改变html元素" aria-label="Permalink to &quot;改变HTML元素&quot;">​</a></h3><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">element.innerHTML </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> html content    </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//改变元素的 inner HTML</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">element.attribute </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> value    </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//改变 HTML 元素的属性值</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">element.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setAttribute</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(attribute, value)    </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//改变 HTML 元素的属性值</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">element.style.property </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> style    </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//改变 HTML 元素的样式</span></span></code></pre></div><h3 id="添加和删除元素" tabindex="-1">添加和删除元素 <a class="header-anchor" href="#添加和删除元素" aria-label="Permalink to &quot;添加和删除元素&quot;">​</a></h3><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">document.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">createElement</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(element)    </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//创建 HTML 元素</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">document.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">removeChild</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(element)    </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//删除 HTML 元素</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">document.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">appendChild</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(element)    </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//添加 HTML 元素</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">document.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">replaceChild</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(element)    </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//替换 HTML 元素</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">document.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">write</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(text)    </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//写入 HTML 输出流</span></span></code></pre></div><h3 id="添加事件处理程序" tabindex="-1">添加事件处理程序 <a class="header-anchor" href="#添加事件处理程序" aria-label="Permalink to &quot;添加事件处理程序&quot;">​</a></h3><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">document.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getElementById</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(id).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">onclick</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(){code}    </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//向 onclick 事件添加事件处理程序</span></span></code></pre></div><h3 id="dom-事件监听程序" tabindex="-1">DOM 事件监听程序 <a class="header-anchor" href="#dom-事件监听程序" aria-label="Permalink to &quot;DOM 事件监听程序&quot;">​</a></h3><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">element.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">addEventListener</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(event, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">useCapture</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><ul><li><p>第一个参数是事件的类型（比如 &quot;click&quot; 或 &quot;mousedown&quot;）。</p></li><li><p>第二个参数是当事件发生时我们需要调用的函数。</p></li><li><p>第三个参数是布尔值，指定使用事件冒泡还是事件捕获。默认值是 false，将使用冒泡传播，如果该值设置为 true，则事件使用捕获传播。</p></li></ul><h3 id="查找-html-对象" tabindex="-1">查找 HTML 对象 <a class="header-anchor" href="#查找-html-对象" aria-label="Permalink to &quot;查找 HTML 对象&quot;">​</a></h3><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">document.anchors                </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//返回拥有 name 属性的所有 &lt;a&gt; 元素。    1</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">document.applets                </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//返回所有 &lt;applet&gt; 元素（HTML5 不建议使用）    1</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">document.baseURI                </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//返回文档的绝对基准 URI    3</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">document.body                   </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//返回 &lt;body&gt; 元素    1</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">document.cookie                 </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//返回文档的 cookie    1</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">document.doctype                </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//返回文档的 doctype    3</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">document.documentElement        </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//返回 &lt;html&gt; 元素    3</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">document.documentMode           </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//返回浏览器使用的模式    3</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">document.documentURI            </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//返回文档的 URI    3</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">document.domain                 </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//返回文档服务器的域名    1</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">document.domConfig              </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//废弃。返回 DOM 配置    3</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">document.embeds                 </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//返回所有 &lt;embed&gt; 元素    3</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">document.forms                  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//返回所有 &lt;form&gt; 元素    1</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">document.head                   </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//返回 &lt;head&gt; 元素    3</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">document.images                 </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//返回所有 &lt;img&gt; 元素    1</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">document.implementation         </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//返回 DOM 实现    3</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">document.inputEncoding          </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//返回文档的编码（字符集）    3</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">document.lastModified           </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//返回文档更新的日期和时间    3</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">document.links                  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//返回拥有 href 属性的所有 &lt;area&gt; 和 &lt;a&gt; 元素    1</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">document.readyState             </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//返回文档的（加载）状态    3</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">document.referrer               </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//返回引用的 URI（链接文档）    1</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">document.scripts                </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//返回所有 &lt;script&gt; 元素    3</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">document.strictErrorChecking    </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//返回是否强制执行错误检查    3</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">document.title                  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//返回 &lt;title&gt; 元素    1</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">document.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">URL</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">                    //返回文档的完整 URL    1</span></span></code></pre></div><h3 id="dom-元素-节点" tabindex="-1">DOM 元素（节点） <a class="header-anchor" href="#dom-元素-节点" aria-label="Permalink to &quot;DOM 元素（节点）&quot;">​</a></h3><h4 id="创建新-html-元素-节点" tabindex="-1">创建新 HTML 元素（节点） <a class="header-anchor" href="#创建新-html-元素-节点" aria-label="Permalink to &quot;创建新 HTML 元素（节点）&quot;">​</a></h4><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> para </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> document.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">createElement</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;p&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> node </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> document.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">createTextNode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;这是一个新段落。&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">para.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">appendChild</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(node);</span></span></code></pre></div><h4 id="创建新-html-元素-insertbefore" tabindex="-1">创建新 HTML 元素 - insertBefore() <a class="header-anchor" href="#创建新-html-元素-insertbefore" aria-label="Permalink to &quot;创建新 HTML 元素 - insertBefore()&quot;">​</a></h4><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> id</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;div1&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> id</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;p1&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;这是一个段落。&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> id</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;p2&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;这是另一个段落。&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">var para = document.createElement(&quot;p&quot;);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">var node = document.createTextNode(&quot;这是新文本。&quot;);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">para.appendChild(node);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">var element = document.getElementById(&quot;div1&quot;);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">var child = document.getElementById(&quot;p1&quot;);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">element.insertBefore(para, child);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><h4 id="删除已有-html-元素" tabindex="-1">删除已有 HTML 元素 <a class="header-anchor" href="#删除已有-html-元素" aria-label="Permalink to &quot;删除已有 HTML 元素&quot;">​</a></h4><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> child </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> document.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getElementById</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(id);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">child.class</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;marked&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">parentNode.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">removeChild</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(child);</span></span></code></pre></div><h4 id="替换-html-元素" tabindex="-1">替换 HTML 元素 <a class="header-anchor" href="#替换-html-元素" aria-label="Permalink to &quot;替换 HTML 元素&quot;">​</a></h4><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">parent.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">replaceChild</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(para, child);</span></span></code></pre></div>`,30)]))}const o=i(l,[["render",h]]);export{g as __pageData,o as default};
