import{_ as l,E as k,c as p,J as a,w as n,a4 as h,m as s,a as t,o as e}from"./chunks/framework.COET-Ywn.js";const S=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"Design Patterns/状态模式.md","filePath":"Design Patterns/状态模式.md"}'),E={name:"Design Patterns/状态模式.md"},r=h("",9),d=s("img",{src:"https://refactoringguru.cn/images/patterns/diagrams/state/problem1.png?id=503968745461a0970d1fbb4362dc186f"},null,-1),g=s("p",null,[t("其主要思想是程序在任意时刻仅可处于几种有限的状态中。 在任何一个特定状态中， 程序的行为都不相同， 且可瞬间从一个状态切换到另一个状态。 不过， 根据当前状态， 程序可能会切换到另外一种状态， 也可能会保持当前状态不变。 这些数量有限且预先定义的状态切换规则被称为"),s("strong",null,"转移"),t("。")],-1),y=s("img",{src:"https://refactoringguru.cn/images/patterns/diagrams/state/structure-zh.png?id=9d132abe67abef895172aad954f1daaf"},null,-1),F=h("",5);function c(o,C,A,D,B,u){const i=k("center");return e(),p("div",null,[r,a(i,null,{default:n(()=>[d]),_:1}),g,a(i,null,{default:n(()=>[y]),_:1}),F])}const x=l(E,[["render",c]]);export{S as __pageData,x as default};
