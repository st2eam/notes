import{_ as s,c as i,o as t,a4 as a}from"./chunks/framework.COET-Ywn.js";const g=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"Python/python基础/python集合.md","filePath":"Python/python基础/python集合.md"}'),e={name:"Python/python基础/python集合.md"},h=a(`<h2 id="python-集合-数组" tabindex="-1">Python 集合（数组） <a class="header-anchor" href="#python-集合-数组" aria-label="Permalink to &quot;Python 集合（数组）&quot;">​</a></h2><p>Python 编程语言中有四种集合数据类型：</p><ul><li>**列表（List）**是一种有序和可更改的集合。允许重复的成员。</li><li>**元组（Tuple）**是一种有序且不可更改的集合。允许重复的成员。</li><li>**集合（Set）**是一个无序和无索引的集合。没有重复的成员。</li><li>**词典（Dictionary）**是一个无序，可变和有索引的集合。没有重复的成员。</li></ul><h2 id="列表-list" tabindex="-1">列表（List） <a class="header-anchor" href="#列表-list" aria-label="Permalink to &quot;列表（List）&quot;">​</a></h2><p><strong>Python 没有内置对数组的支持，但可以使用列表代替。</strong></p><p>列表是一个有序且可更改的集合。在 Python 中，列表用方括号编写。</p><p>创建列表：</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">thislist </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;apple&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;banana&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;cherry&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span></code></pre></div><h3 id="list-构造函数" tabindex="-1">list() 构造函数 <a class="header-anchor" href="#list-构造函数" aria-label="Permalink to &quot;list() 构造函数&quot;">​</a></h3><p>也可以使用 <code>list()</code> 构造函数创建一个新列表。</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">thislist </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> list</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">((</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;apple&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;banana&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;cherry&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 请注意双括号</span></span></code></pre></div><h3 id="访问项目" tabindex="-1">访问项目 <a class="header-anchor" href="#访问项目" aria-label="Permalink to &quot;访问项目&quot;">​</a></h3><p>您可以通过引用索引号来访问列表项：</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">thislist </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;apple&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;banana&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;cherry&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(thislist[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 打印列表的第二项</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(thislist[</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 打印列表的最后一项</span></span></code></pre></div><h3 id="索引范围" tabindex="-1">索引范围 <a class="header-anchor" href="#索引范围" aria-label="Permalink to &quot;索引范围&quot;">​</a></h3><p>您可以通过指定范围的起点和终点来指定索引范围。</p><p>指定范围后，返回值将是包含指定项目的新列表。</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">thislist </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;apple&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;banana&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;cherry&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;orange&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;kiwi&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;melon&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;mango&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(thislist[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 返回第三、第四、第五项</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(thislist[</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 返回从索引 -4（包括）到索引 -1（排除）的项目</span></span></code></pre></div><h3 id="检查项目是否存在" tabindex="-1">检查项目是否存在 <a class="header-anchor" href="#检查项目是否存在" aria-label="Permalink to &quot;检查项目是否存在&quot;">​</a></h3><p>如需确定列表中是否存在指定的项，请使用 <code>in</code> 关键字：</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;apple&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> in</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> thislist:</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Yes, &#39;apple&#39; is in the fruits list&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h3 id="列表长度" tabindex="-1">列表长度 <a class="header-anchor" href="#列表长度" aria-label="Permalink to &quot;列表长度&quot;">​</a></h3><p>如需确定列表中有多少项，请使用 <code>len()</code> 方法</p><p>打印列表中的项目数：</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">len</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(thislist))</span></span></code></pre></div><h3 id="添加项目" tabindex="-1">添加项目 <a class="header-anchor" href="#添加项目" aria-label="Permalink to &quot;添加项目&quot;">​</a></h3><p>如需将项目添加到列表的末尾，请使用 <code>append()</code> 方法</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">thislist.append(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;orange&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>要在指定的索引处添加项目，请使用 <code>insert()</code> 方法</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">thislist.insert(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;orange&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h3 id="删除项目" tabindex="-1">删除项目 <a class="header-anchor" href="#删除项目" aria-label="Permalink to &quot;删除项目&quot;">​</a></h3><p><code>remove()</code> 方法删除指定的项目</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">thislist.remove(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;banana&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p><code>pop()</code> 方法删除指定的索引（如果未指定索引，则删除最后一项）</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">thislist.pop()</span></span></code></pre></div><p><code>del</code> 关键字删除指定的索引</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">del</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> thislist[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span></code></pre></div><p><code>del</code> 关键字也能完整地删除列表</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">thislist </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;apple&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;banana&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;cherry&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">del</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> thislist</span></span></code></pre></div><p><code>clear()</code> 方法清空列表</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">thislist.clear()</span></span></code></pre></div><h3 id="复制列表" tabindex="-1">复制列表 <a class="header-anchor" href="#复制列表" aria-label="Permalink to &quot;复制列表&quot;">​</a></h3><p>使用<code>=</code>来复制列表，但是<code>list2</code> 将只是对 <code>list1</code> 的引用，<code>list1</code> 中所做的更改也将自动在 <code>list2</code> 中进行。</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">list2 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> list1</span></span></code></pre></div><p>使用 <code>copy()</code> 方法来复制列表</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">mylist </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> thislist.copy()</span></span></code></pre></div><p>制作副本的另一种方法是使用内建的方法 <code>list()</code></p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">mylist </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> list</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(thislist)</span></span></code></pre></div><h3 id="合并两个列表" tabindex="-1">合并两个列表 <a class="header-anchor" href="#合并两个列表" aria-label="Permalink to &quot;合并两个列表&quot;">​</a></h3><p>最简单的方法之一是使用 + 运算符。</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">list1 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;a&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;b&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> , </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;c&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">list2 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">list3 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> list1 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> list2</span></span></code></pre></div><p>使用 extend() 方法将 list2 添加到 list1 的末尾</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">list1.extend(list2)</span></span></code></pre></div><h3 id="其他列表方法" tabindex="-1">其他列表方法 <a class="header-anchor" href="#其他列表方法" aria-label="Permalink to &quot;其他列表方法&quot;">​</a></h3><p>Python 有一组可以在列表上使用的内建方法。</p><table><thead><tr><th style="text-align:left;">方法</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;"><a href="https://www.w3school.com.cn/python/ref_list_append.asp" target="_blank" rel="noreferrer">append()</a></td><td style="text-align:left;">在列表的末尾添加一个元素</td></tr><tr><td style="text-align:left;"><a href="https://www.w3school.com.cn/python/ref_list_clear.asp" target="_blank" rel="noreferrer">clear()</a></td><td style="text-align:left;">删除列表中的所有元素</td></tr><tr><td style="text-align:left;"><a href="https://www.w3school.com.cn/python/ref_list_copy.asp" target="_blank" rel="noreferrer">copy()</a></td><td style="text-align:left;">返回列表的副本</td></tr><tr><td style="text-align:left;"><a href="https://www.w3school.com.cn/python/ref_list_count.asp" target="_blank" rel="noreferrer">count()</a></td><td style="text-align:left;">返回具有指定值的元素数量。</td></tr><tr><td style="text-align:left;"><a href="https://www.w3school.com.cn/python/ref_list_extend.asp" target="_blank" rel="noreferrer">extend()</a></td><td style="text-align:left;">将列表元素（或任何可迭代的元素）添加到当前列表的末尾</td></tr><tr><td style="text-align:left;"><a href="https://www.w3school.com.cn/python/ref_list_index.asp" target="_blank" rel="noreferrer">index()</a></td><td style="text-align:left;">返回具有指定值的第一个元素的索引</td></tr><tr><td style="text-align:left;"><a href="https://www.w3school.com.cn/python/ref_list_insert.asp" target="_blank" rel="noreferrer">insert()</a></td><td style="text-align:left;">在指定位置添加元素</td></tr><tr><td style="text-align:left;"><a href="https://www.w3school.com.cn/python/ref_list_pop.asp" target="_blank" rel="noreferrer">pop()</a></td><td style="text-align:left;">删除指定位置的元素</td></tr><tr><td style="text-align:left;"><a href="https://www.w3school.com.cn/python/ref_list_remove.asp" target="_blank" rel="noreferrer">remove()</a></td><td style="text-align:left;">删除具有指定值的项目</td></tr><tr><td style="text-align:left;"><a href="https://www.w3school.com.cn/python/ref_list_reverse.asp" target="_blank" rel="noreferrer">reverse()</a></td><td style="text-align:left;">颠倒列表的顺序</td></tr><tr><td style="text-align:left;"><a href="https://www.w3school.com.cn/python/ref_list_sort.asp" target="_blank" rel="noreferrer">sort()</a></td><td style="text-align:left;">对列表进行排序</td></tr></tbody></table><h2 id="元组-tuple" tabindex="-1">元组（Tuple） <a class="header-anchor" href="#元组-tuple" aria-label="Permalink to &quot;元组（Tuple）&quot;">​</a></h2><p>元组是有序且不可更改的集合。在 Python 中，元组是用圆括号编写的。</p><p>创建元组：</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">thistuple </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;apple&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;banana&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;cherry&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h3 id="tuple-构造函数" tabindex="-1">tuple() 构造函数 <a class="header-anchor" href="#tuple-构造函数" aria-label="Permalink to &quot;tuple() 构造函数&quot;">​</a></h3><p>也可以使用 <code>tuple()</code> 构造函数来创建元组。</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">thistuple </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> tuple</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">((</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;apple&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;banana&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;cherry&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 请注意双括号</span></span></code></pre></div><h3 id="访问元组项目" tabindex="-1">访问元组项目 <a class="header-anchor" href="#访问元组项目" aria-label="Permalink to &quot;访问元组项目&quot;">​</a></h3><p>您可以通过引用方括号内的索引号来访问元组项目：</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(thistuple[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 打印元组中的第二个项目</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(thistuple[</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 打印元组的最后一个项目</span></span></code></pre></div><h3 id="索引范围-1" tabindex="-1">索引范围 <a class="header-anchor" href="#索引范围-1" aria-label="Permalink to &quot;索引范围&quot;">​</a></h3><p>与列表相似，可以使用相同的方法来获取指定范围的起点和终点来指定索引范围内的内容</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">thistuple </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;apple&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;banana&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;cherry&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;orange&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;kiwi&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;melon&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;mango&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(thistuple[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># (&#39;cherry&#39;, &#39;orange&#39;, &#39;kiwi&#39;)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(thistuple[</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># (&#39;orange&#39;, &#39;kiwi&#39;, &#39;melon&#39;)</span></span></code></pre></div><h3 id="更改元组值" tabindex="-1">更改元组值 <a class="header-anchor" href="#更改元组值" aria-label="Permalink to &quot;更改元组值&quot;">​</a></h3><p>创建元组后，您将无法更改其值。元组是不可变的，或者也称为恒定的。</p><p>但是有一种解决方法。您可以将元组转换为列表，更改列表，然后将列表转换回元组。</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;apple&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;banana&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;cherry&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">y </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> list</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">y[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;kiwi&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> tuple</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(y)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x)</span></span></code></pre></div><h3 id="创建只有一个项目的元组" tabindex="-1">创建只有一个项目的元组 <a class="header-anchor" href="#创建只有一个项目的元组" aria-label="Permalink to &quot;创建只有一个项目的元组&quot;">​</a></h3><p>如需创建仅包含一个项目的元组，您必须在该项目后添加一个逗号，否则 Python 无法将变量识别为元组。</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">thistuple </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;apple&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(thistuple))</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># &lt;class &#39;tuple&#39;&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#不是元组</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">thistuple </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;apple&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(thistuple))</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># &lt;class &#39;str&#39;&gt;</span></span></code></pre></div><h3 id="删除元组" tabindex="-1">删除元组 <a class="header-anchor" href="#删除元组" aria-label="Permalink to &quot;删除元组&quot;">​</a></h3><p>**注释：**您无法删除元组中的项目。</p><p>元组是不可更改的，因此您无法从中删除项目，但您可以完全删除元组</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">del</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> thistuple</span></span></code></pre></div><h3 id="合并两个元组" tabindex="-1">合并两个元组 <a class="header-anchor" href="#合并两个元组" aria-label="Permalink to &quot;合并两个元组&quot;">​</a></h3><p>如需连接两个或多个元组，您可以使用 + 运算符：</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">tuple1 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;a&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;b&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> , </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;c&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">tuple2 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">tuple3 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> tuple1 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> tuple2</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(tuple3)</span></span></code></pre></div><h3 id="元组方法" tabindex="-1">元组方法 <a class="header-anchor" href="#元组方法" aria-label="Permalink to &quot;元组方法&quot;">​</a></h3><p>Python 提供两个可以在元组上使用的内建方法。</p><table><thead><tr><th style="text-align:left;">方法</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;"><a href="https://www.w3school.com.cn/python/ref_tuple_count.asp" target="_blank" rel="noreferrer">count()</a></td><td style="text-align:left;">返回元组中指定值出现的次数。</td></tr><tr><td style="text-align:left;"><a href="https://www.w3school.com.cn/python/ref_tuple_index.asp" target="_blank" rel="noreferrer">index()</a></td><td style="text-align:left;">在元组中搜索指定的值并返回它被找到的位置。</td></tr></tbody></table><h2 id="集合-set" tabindex="-1">集合（Set） <a class="header-anchor" href="#集合-set" aria-label="Permalink to &quot;集合（Set）&quot;">​</a></h2><p>集合是无序和无索引的集合。在 Python 中，集合用花括号编写。</p><p>创建集合：</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">thisset </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;apple&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;banana&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;cherry&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="set-构造函数" tabindex="-1">set() 构造函数 <a class="header-anchor" href="#set-构造函数" aria-label="Permalink to &quot;set() 构造函数&quot;">​</a></h3><p>也可以使用 <code>set()</code> 构造函数来创建集合。</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">thisset </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> set</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">((</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;apple&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;banana&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;cherry&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 请留意这个双括号</span></span></code></pre></div><p>**注释：**集合是无序的，因此您无法确定项目的显示顺序。</p><h3 id="访问项目-1" tabindex="-1">访问项目 <a class="header-anchor" href="#访问项目-1" aria-label="Permalink to &quot;访问项目&quot;">​</a></h3><p>您无法通过引用索引来访问 set 中的项目，因为 set 是无序的，项目没有索引。</p><p>但是您可以使用 <code>for</code> 循环遍历 set 项目，或者使用 <code>in</code> 关键字查询集合中是否存在指定值。</p><p>遍历集合，并打印值：</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">thisset </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;apple&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;banana&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;cherry&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> thisset:</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x)</span></span></code></pre></div><h3 id="更改项目" tabindex="-1">更改项目 <a class="header-anchor" href="#更改项目" aria-label="Permalink to &quot;更改项目&quot;">​</a></h3><p>集合一旦创建，您就无法更改项目，但是您可以添加新项目。</p><h3 id="添加项目-1" tabindex="-1">添加项目 <a class="header-anchor" href="#添加项目-1" aria-label="Permalink to &quot;添加项目&quot;">​</a></h3><p>要将一个项添加到集合，请使用 <code>add()</code> 方法。</p><p>要向集合中添加多个项目，请使用 <code>update()</code> 方法。</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">thisset.add(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;orange&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">thisset.update([</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;orange&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;mango&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;grapes&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])</span></span></code></pre></div><h3 id="删除项目-1" tabindex="-1">删除项目 <a class="header-anchor" href="#删除项目-1" aria-label="Permalink to &quot;删除项目&quot;">​</a></h3><p>要删除集合中的项目，请使用 <code>remove()</code> 或 <code>discard()</code> 方法。</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">thisset.remove(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;banana&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">thisset.discard(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;banana&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>**注释：**如果要删除的项目不存在，则 <code>remove()</code> 将引发错误。如果要删除的项目不存在，则 <code>discard()</code> 不会引发错误。</p><p>您还可以使用 <code>pop()</code> 方法删除项目，但此方法将删除最后一项。集合是无序的，因此在使用 <code>pop()</code> 方法时，您不会知道删除的是哪个项目。</p><p><code>pop()</code> 方法的返回值是被删除的项目。</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> thisset.pop()</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(thisset)</span></span></code></pre></div><p><code>clear()</code> 方法清空集合：</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">thisset.clear()</span></span></code></pre></div><p><code>del</code> 彻底删除集合：</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">del</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> thisset</span></span></code></pre></div><h3 id="合并两个集合" tabindex="-1">合并两个集合 <a class="header-anchor" href="#合并两个集合" aria-label="Permalink to &quot;合并两个集合&quot;">​</a></h3><p>在 Python 中，有几种方法可以连接两个或多个集合。</p><p>您可以使用 union() 方法返回包含两个集合中所有项目的新集合，也可以使用 update() 方法将一个集合中的所有项目插入另一个集合中：</p><p>union() 方法返回一个新集合，其中包含两个集合中的所有项目：</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">set1 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;a&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;b&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> , </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;c&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">set2 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">set3 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> set1.union(set2)</span></span></code></pre></div><p>update() 方法将 set2 中的项目插入 set1 中：</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">set1.update(set2)</span></span></code></pre></div><p>**注释：**union() 和 update() 都将排除任何重复项。</p><h3 id="set-方法" tabindex="-1">Set 方法 <a class="header-anchor" href="#set-方法" aria-label="Permalink to &quot;Set 方法&quot;">​</a></h3><p>Python 拥有一套能够在集合（set）上使用的内建方法。</p><table><thead><tr><th style="text-align:left;">方法</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;"><a href="https://www.w3school.com.cn/python/ref_set_add.asp" target="_blank" rel="noreferrer">add()</a></td><td style="text-align:left;">向集合添加元素。</td></tr><tr><td style="text-align:left;"><a href="https://www.w3school.com.cn/python/ref_set_clear.asp" target="_blank" rel="noreferrer">clear()</a></td><td style="text-align:left;">删除集合中的所有元素。</td></tr><tr><td style="text-align:left;"><a href="https://www.w3school.com.cn/python/ref_set_copy.asp" target="_blank" rel="noreferrer">copy()</a></td><td style="text-align:left;">返回集合的副本。</td></tr><tr><td style="text-align:left;"><a href="https://www.w3school.com.cn/python/ref_set_difference.asp" target="_blank" rel="noreferrer">difference()</a></td><td style="text-align:left;">返回包含两个或更多集合之间差异的集合。</td></tr><tr><td style="text-align:left;"><a href="https://www.w3school.com.cn/python/ref_set_difference_update.asp" target="_blank" rel="noreferrer">difference_update()</a></td><td style="text-align:left;">删除此集合中也包含在另一个指定集合中的项目。</td></tr><tr><td style="text-align:left;"><a href="https://www.w3school.com.cn/python/ref_set_discard.asp" target="_blank" rel="noreferrer">discard()</a></td><td style="text-align:left;">删除指定项目。</td></tr><tr><td style="text-align:left;"><a href="https://www.w3school.com.cn/python/ref_set_intersection.asp" target="_blank" rel="noreferrer">intersection()</a></td><td style="text-align:left;">返回为两个其他集合的交集的集合。</td></tr><tr><td style="text-align:left;"><a href="https://www.w3school.com.cn/python/ref_set_intersection_update.asp" target="_blank" rel="noreferrer">intersection_update()</a></td><td style="text-align:left;">删除此集合中不存在于其他指定集合中的项目。</td></tr><tr><td style="text-align:left;"><a href="https://www.w3school.com.cn/python/ref_set_isdisjoint.asp" target="_blank" rel="noreferrer">isdisjoint()</a></td><td style="text-align:left;">返回两个集合是否有交集。</td></tr><tr><td style="text-align:left;"><a href="https://www.w3school.com.cn/python/ref_set_issubset.asp" target="_blank" rel="noreferrer">issubset()</a></td><td style="text-align:left;">返回另一个集合是否包含此集合。</td></tr><tr><td style="text-align:left;"><a href="https://www.w3school.com.cn/python/ref_set_issuperset.asp" target="_blank" rel="noreferrer">issuperset()</a></td><td style="text-align:left;">返回此集合是否包含另一个集合。</td></tr><tr><td style="text-align:left;"><a href="https://www.w3school.com.cn/python/ref_set_pop.asp" target="_blank" rel="noreferrer">pop()</a></td><td style="text-align:left;">从集合中删除一个元素。</td></tr><tr><td style="text-align:left;"><a href="https://www.w3school.com.cn/python/ref_set_remove.asp" target="_blank" rel="noreferrer">remove()</a></td><td style="text-align:left;">删除指定元素。</td></tr><tr><td style="text-align:left;"><a href="https://www.w3school.com.cn/python/ref_set_symmetric_difference.asp" target="_blank" rel="noreferrer">symmetric_difference()</a></td><td style="text-align:left;">返回具有两组集合的对称差集的集合。</td></tr><tr><td style="text-align:left;"><a href="https://www.w3school.com.cn/python/ref_set_symmetric_difference_update.asp" target="_blank" rel="noreferrer">symmetric_difference_update()</a></td><td style="text-align:left;">插入此集合和另一个集合的对称差集。</td></tr><tr><td style="text-align:left;"><a href="https://www.w3school.com.cn/python/ref_set_union.asp" target="_blank" rel="noreferrer">union()</a></td><td style="text-align:left;">返回包含集合并集的集合。</td></tr><tr><td style="text-align:left;"><a href="https://www.w3school.com.cn/python/ref_set_update.asp" target="_blank" rel="noreferrer">update()</a></td><td style="text-align:left;">用此集合和其他集合的并集来更新集合。</td></tr></tbody></table><h2 id="字典-dictionary" tabindex="-1">字典（Dictionary） <a class="header-anchor" href="#字典-dictionary" aria-label="Permalink to &quot;字典（Dictionary）&quot;">​</a></h2><p>字典是一个无序、可变和有索引的集合。在 Python 中，字典用花括号编写，拥有键和值。</p><p>创建字典：</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">thisdict </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	{</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &quot;brand&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Porsche&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &quot;model&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;911&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &quot;year&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1963</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="dict-构造函数" tabindex="-1">dict() 构造函数 <a class="header-anchor" href="#dict-构造函数" aria-label="Permalink to &quot;dict() 构造函数&quot;">​</a></h3><p>也可以使用 <code>dict()</code> 构造函数创建新的字典：</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">thisdict </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> dict</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">brand</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Porsche&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">model</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;911&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">year</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1963</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 请注意，关键字不是字符串字面量</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 请注意，使用了等号而不是冒号来赋值</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(thisdict)</span></span></code></pre></div><h3 id="访问项目-2" tabindex="-1">访问项目 <a class="header-anchor" href="#访问项目-2" aria-label="Permalink to &quot;访问项目&quot;">​</a></h3><p>您可以通过在方括号内引用其键名来访问字典的项目：</p><p>获取 &quot;model&quot; 键的值：</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> thisdict[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;model&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span></code></pre></div><p>还有一个名为 <code>get()</code> 的方法会给你相同的结果：</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> thisdict.get(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;model&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>您还可以使用 <code>values()</code> 函数返回字典的值：</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">thisdict.values()</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># dict_values([&#39;Porsche&#39;, &#39;911&#39;, 1963])</span></span></code></pre></div><p>通过使用 items() 函数获取所有键和值：</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">thisdict.items()</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># dict_items([(&#39;brand&#39;, &#39;Porsche&#39;), (&#39;model&#39;, &#39;911&#39;), (&#39;year&#39;, 1963)])</span></span></code></pre></div><h3 id="更改值" tabindex="-1">更改值 <a class="header-anchor" href="#更改值" aria-label="Permalink to &quot;更改值&quot;">​</a></h3><p>您可以通过引用其键名来更改特定项的值：</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">thisdict[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;year&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2022</span></span></code></pre></div><p>您还可以使用 <code>values()</code> 函数返回字典的值</p><h3 id="检查键是否存在" tabindex="-1">检查键是否存在 <a class="header-anchor" href="#检查键是否存在" aria-label="Permalink to &quot;检查键是否存在&quot;">​</a></h3><p>要确定字典中是否存在指定的键，请使用 <code>in</code> 关键字</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;model&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> in</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> thisdict:</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Yes, &#39;model&#39; is one of the keys in the thisdict dictionary&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h3 id="字典长度" tabindex="-1">字典长度 <a class="header-anchor" href="#字典长度" aria-label="Permalink to &quot;字典长度&quot;">​</a></h3><p>要确定字典有多少项目（键值对），请使用 <code>len()</code> 方法。</p><h3 id="添加项目-2" tabindex="-1">添加项目 <a class="header-anchor" href="#添加项目-2" aria-label="Permalink to &quot;添加项目&quot;">​</a></h3><p>通过使用新的索引键并为其赋值，可以将项目添加到字典中：</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">thisdict[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;color&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;red&quot;</span></span></code></pre></div><h3 id="删除项目-2" tabindex="-1">删除项目 <a class="header-anchor" href="#删除项目-2" aria-label="Permalink to &quot;删除项目&quot;">​</a></h3><p>有几种方法可以从字典中删除项目</p><p><code>pop() </code>方法删除具有指定键名的项：</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">thisdict.pop(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;model&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p><code>popitem()</code> 方法删除最后插入的项目（在 3.7 之前的版本中，删除随机项目）</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">thisdict.popitem()</span></span></code></pre></div><p><code>del</code> 关键字删除具有指定键名的项目:</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">del</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> thisdict[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;model&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span></code></pre></div><p><code>del</code> 关键字也可以完全删除字典：</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">del</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> thisdict</span></span></code></pre></div><p><code>clear()</code> 关键字清空字典:</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">thisdict.clear()</span></span></code></pre></div><h3 id="复制字典" tabindex="-1">复制字典 <a class="header-anchor" href="#复制字典" aria-label="Permalink to &quot;复制字典&quot;">​</a></h3><p>使用<code>=</code>来复制字典，但是<code>dict2</code> 只是对 <code>dict1</code> 的引用，而 <code>dict1</code> 中的更改也将自动在 <code>dict2</code> 中进行。</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">mydict </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> thisdict</span></span></code></pre></div><p>使用 <code>copy()</code> 方法来复制字典</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">mydict </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> thisdict.copy()</span></span></code></pre></div><p>制作副本的另一种方法是使用内建方法 <code>dict()</code>。</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">mydict </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> dict</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(thisdict)</span></span></code></pre></div><h3 id="嵌套字典" tabindex="-1">嵌套字典 <a class="header-anchor" href="#嵌套字典" aria-label="Permalink to &quot;嵌套字典&quot;">​</a></h3><p>字典也可以包含许多字典，这被称为嵌套字典。</p><p>创建三个字典，然后创建一个包含其他三个字典的字典：</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">child1 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &quot;name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> : </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Phoebe Adele&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &quot;year&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> : </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2002</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">child2 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &quot;name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> : </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Jennifer Katharine&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &quot;year&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> : </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1996</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">child3 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &quot;name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> : </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Rory John&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &quot;year&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> : </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1999</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">myfamily </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &quot;child1&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> : child1,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &quot;child2&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> : child2,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &quot;child3&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> : child3</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="字典方法" tabindex="-1">字典方法 <a class="header-anchor" href="#字典方法" aria-label="Permalink to &quot;字典方法&quot;">​</a></h3><p>Python 提供一组可以在字典上使用的内建方法。</p><table><thead><tr><th style="text-align:left;">方法</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;"><a href="https://www.w3school.com.cn/python/ref_dictionary_clear.asp" target="_blank" rel="noreferrer">clear()</a></td><td style="text-align:left;">删除字典中的所有元素</td></tr><tr><td style="text-align:left;"><a href="https://www.w3school.com.cn/python/ref_dictionary_copy.asp" target="_blank" rel="noreferrer">copy()</a></td><td style="text-align:left;">返回字典的副本</td></tr><tr><td style="text-align:left;"><a href="https://www.w3school.com.cn/python/ref_dictionary_fromkeys.asp" target="_blank" rel="noreferrer">fromkeys()</a></td><td style="text-align:left;">返回拥有指定键和值的字典</td></tr><tr><td style="text-align:left;"><a href="https://www.w3school.com.cn/python/ref_dictionary_get.asp" target="_blank" rel="noreferrer">get()</a></td><td style="text-align:left;">返回指定键的值</td></tr><tr><td style="text-align:left;"><a href="https://www.w3school.com.cn/python/ref_dictionary_items.asp" target="_blank" rel="noreferrer">items()</a></td><td style="text-align:left;">返回包含每个键值对的元组的列表</td></tr><tr><td style="text-align:left;"><a href="https://www.w3school.com.cn/python/ref_dictionary_keys.asp" target="_blank" rel="noreferrer">keys()</a></td><td style="text-align:left;">返回包含字典键的列表</td></tr><tr><td style="text-align:left;"><a href="https://www.w3school.com.cn/python/ref_dictionary_pop.asp" target="_blank" rel="noreferrer">pop()</a></td><td style="text-align:left;">删除拥有指定键的元素</td></tr><tr><td style="text-align:left;"><a href="https://www.w3school.com.cn/python/ref_dictionary_popitem.asp" target="_blank" rel="noreferrer">popitem()</a></td><td style="text-align:left;">删除最后插入的键值对</td></tr><tr><td style="text-align:left;"><a href="https://www.w3school.com.cn/python/ref_dictionary_setdefault.asp" target="_blank" rel="noreferrer">setdefault()</a></td><td style="text-align:left;">返回指定键的值。如果该键不存在，则插入具有指定值的键。</td></tr><tr><td style="text-align:left;"><a href="https://www.w3school.com.cn/python/ref_dictionary_update.asp" target="_blank" rel="noreferrer">update()</a></td><td style="text-align:left;">使用指定的键值对字典进行更新</td></tr><tr><td style="text-align:left;"><a href="https://www.w3school.com.cn/python/ref_dictionary_values.asp" target="_blank" rel="noreferrer">values()</a></td><td style="text-align:left;">返回字典中所有值的列表</td></tr></tbody></table>`,182),l=[h];function n(p,k,d,r,o,E){return t(),i("div",null,l)}const y=s(e,[["render",n]]);export{g as __pageData,y as default};
