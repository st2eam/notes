import{_ as l,c as i,o as p,a4 as u}from"./chunks/framework.B-C7vMfR.js";const _=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"Design/动效设计.md","filePath":"Design/动效设计.md"}'),a={name:"Design/动效设计.md"},e=u('<ul><li><p>动效设计的作用</p><ul><li><p>提升用户体验</p><ul><li><p>迪士尼动画大师乃特维克说过一句话：动画的一切皆在于时间点和空间幅度。</p></li><li><p>通过「时间点」和「空间幅度」的设计为用户建立运动的可信度，即视觉上的真实感，当用户意识到这个动作是合理的，才能更加清晰愉悦地使用产品。</p></li><li><p>动效的目的是告诉用户元素之间的关系以及哪些是可点击的、哪些是不可点击的元素。还会暗示界面将会出现什么内容等等功能。在情感化设计理论中，动效是能够拉近用户与产品之间距离的设计手段。优秀的动效会为常见的交互增加很多趣味，让品牌更加深入人心。</p></li></ul></li></ul></li><li><p>增添产品气质</p><ul><li><p>未添加动效的产品，会带给人一种死气沉沉的感觉，所有内容平铺直叙、毫无生机，即使界面设计的很美观，也会缺乏一种灵动细腻的气质。</p></li><li><p>界面视觉就是产品的颜值，交互动效就是产品的肢体语言。合理的动效能将更立体、更富有关联性的信息传递出去，提高产品的表达能力，增加亲和力和趣味性，也利于品牌的建立。</p></li></ul></li><li><p>创造设计师优势</p><ul><li><p>降低沟通成本</p><ul><li><p>设计师通过制作高保真动效 Demo 展示设计思路和创意，大大提高设计提案交接率，降低了设计师与开发的沟通成本，提高了动效的还原度，体现专业性。</p></li><li><p>打造核心竞争力</p><ul><li><p>在 UI 设计行业已经趋于饱和，并且产品设计流程逐渐实现体系化和模块化的今天，设计师如果只会利用组件重复性地「拼凑」页面而无更多的价值产出，被替代的可能性将会增大。在日常工作之余，若要为公司和团队输出更多的价值</p></li><li><p>动效设计能力便是交互/视觉设计师的必备技能与核心竞争力之一。</p></li></ul></li></ul></li></ul></li><li><p>动效范围涵盖</p><ul><li><p>入场\\出场动效（enter &amp; exit）</p></li><li><p>过渡动效（transition）</p></li><li><p>加载动效（loading）</p></li></ul></li><li><p>动效设计的类型</p><ul><li><p>转场过渡</p><ul><li><p>人脑灰质会对动态事物（如：移动、形变、色变等）保持敏感。在界面中加入一些平滑舒适的过渡效果，不仅能让界面显得生动，更能帮助用户理解界面前后变化的逻辑关系。</p><ul><li><img src="https://api2.mubu.com/v3/document_image/4d83e0c3-10f2-42f0-be0a-5b80a0645620-6086221.jpg" alt="image"></li></ul></li></ul></li><li><p>层级展示</p><ul><li><p>现实空间里，物体存在近大远小原则，运动则会近快远慢。当界面中的元素存在不同层级时，恰当的动效可以帮助用户理清前后位置关系，以动效来体现整个系统的空间感。</p><ul><li><img src="https://api2.mubu.com/v3/document_image/0473ef86-a9cb-417a-b91e-9a1ea4f15aab-6086221.jpg" alt="image"></li></ul></li></ul></li><li><p>空间扩展</p><ul><li><p>在移动端界面设计中，由于有限的屏幕空间难以承载大量的信息内容，可以通过折叠、翻转、缩放等形式拓展附加内容的存储空间，以渐进展示的方式来减轻用户的认知负担。</p><ul><li><img src="https://api2.mubu.com/v3/document_image/fb89be0d-8069-4140-9650-867fddeb388c-6086221.jpg" alt="image"></li></ul></li></ul></li><li><p>聚焦关注</p><ul><li><p>聚焦关注是通过元素的动作变化，提醒用户关注特点的内容信息。这种提醒方式不仅可以降低视觉元素的干扰，使界面更清爽简洁，还能在用户使用过程中，轻盈自然地吸引用户注意力。</p><ul><li><img src="https://api2.mubu.com/v3/document_image/aedff4d2-48d7-426f-b0d6-7d26d0093330-6086221.jpg" alt="image"></li></ul></li></ul></li><li><p>内容呈现</p><ul><li><p>界面内容元素按照一定的秩序规律逐级呈现，引导用户视觉焦点走向，帮助用户更好地感知页面布局、层级结构和重点内容，同时也能让整个流程更加丰富流畅，增添了界面的活力。</p><ul><li><img src="https://api2.mubu.com/v3/document_image/c3b0ba75-5ef7-41f9-9203-d27291643175-6086221.jpg" alt="image"></li></ul></li></ul></li><li><p>操作反馈</p><ul><li><p>无论是点击、长按、拖拽、滑动等交互行为，都应该得到系统的即时反馈，将其以视觉或动效的方式展现，帮助用户了解当前系统对交互过程的响应情况，为用户带来安全感。</p><ul><li><img src="https://api2.mubu.com/v3/document_image/497f7025-2b6a-4468-b7da-64a36ddb9241-6086221.jpg" alt="image"></li></ul></li></ul></li></ul></li><li><p>常用动效类型及应用参考</p><ul><li><p>在浏览器中最常用、最容易实现且能保障性能的是 位置（position）、大小（scale）、旋转（rotation）、透明度（opacity） 这四种属性的变化，当变化这四种属性的任意一种或几种就能达到交互微动效的目的时，无须再加入其它不必要的属性，以免影响动效流畅度。</p></li><li><p>属性的变化一般又分为 线性（liner）变化 和 曲线（curves）变化两种。</p><ul><li><p>线性变化</p><ul><li>线性变化具有 匀速、骤停 这两个特征，一般适用于与物理属性无关的过渡动效（如透明度属性的变化，包含渐隐渐现或颜色间的切换），或有规律的加载动效（如均匀的循环、数值变化或进度变化）。在与物理参数有关的变化中（如位置变化），尽量避免使用线性变化，否则很容易给人带来动效僵硬、不自然的感觉。</li></ul></li><li><p>曲线变化</p><ul><li>曲线包含多种类型，在交互微动效设计中，缓动曲线（easing）的应用范围最广、效果最自然、对用户的干扰也较小，多用于与物理属性相关的属性变化中</li></ul></li></ul></li></ul></li><li><p>缓入缓出</p><ul><li><p>当运动发生的时候，元素运动速率的变化符合用户的预期。自然界之中是很少存在完全线性的运动的，没有任何东西能够完美的保持匀速运动，缓动效果能够让运动看起来更加接近自然，符合用户的认知，达到用户的预期。</p><ul><li><img src="https://api2.mubu.com/v3/document_image/417017ac-860f-46c7-9403-e9632efe9567-6086221.jpg" alt="image"></li></ul></li></ul></li><li><p>偏移与延迟</p><ul><li><p>加入新的界面元素或场景时，可用于表达元素之间的关系。利用偏移和延迟来错开元素的运动时间，表明元素之间的层级与关系。设计师利用错开运动时间的方法，让信息或界面元素按照有所区别的秩序进退场，利用明显的错序运动暗示用户信息与界面元素之间或许存在某些区别，或利用错序的方法吸引用户的注意。</p><ul><li><img src="https://api2.mubu.com/v3/document_image/a9dd752b-0649-405e-bc56-f09e1b62a992-6086221.jpg" alt="image"></li></ul></li></ul></li><li><p>父子关系</p><ul><li><p>当界面元素较多时，可以利用时空差异创造出可以感知到的父子继承关系。在用户进行操作时，有父子关系的元素帮助用户更好地理解它们之间的层级关系以及带来更加有理可循的操作反馈。正如上面给出的这张动图，位于下方的方块的左右运动，而位于上方的方块跟随下方方块进行左右运动并同时进行自己的缩放运动，他们之间构成了父子关系。说得简单一点，父子关系就是子元素的某个属性的值随父元素的某个属性参数的值按照一定的比例进行变化</p><ul><li><img src="https://api2.mubu.com/v3/document_image/a079ea4a-1d5b-4912-9738-e8b4e71875fc-6086221.jpg" alt="image"></li></ul></li></ul></li><li><p>形变</p><ul><li><p>用连贯的状态描绘表达元素功能的改变。人们对于实物的变形是敏感的，合理的变形能够清晰高效地将正确的信息以最高效、最令人愉悦的方式传递给用户。注意，这里所说的变形并不一定要像上面那种动图一样动作那么大才算变形。或许是颜色的变化，也有可能是角度的改变，这些都能达成我们想要的效果。</p><ul><li><img src="https://api2.mubu.com/v3/document_image/96291394-af7a-4490-90c0-0dbc569a2ade-6086221.jpg" alt="image"></li></ul></li></ul></li><li><p>值变</p><ul><li><p>当元素的值发生变化时，用连续动态的方式表达前后之间的关联。连续性的数值变化动态效果能让用户清晰地看见数值到底是在变多还是变少。</p><ul><li><img src="https://api2.mubu.com/v3/document_image/8a099f0f-8377-413d-885a-d63300325c90-6086221.jpg" alt="image"></li></ul></li></ul></li><li><p>遮罩</p><ul><li><p>遮罩型的动画是在界面元素进场或者退场的时候创造连续性效果的一种选择。如果一个界面元素的不同的展示方式对应不同的功能，那么让展示方式的变化过程具有连续性。</p><ul><li><img src="https://api2.mubu.com/v3/document_image/829c5377-56ae-4c99-b05a-7f9bd6eb71b9-6086221.jpg" alt="image"></li></ul></li></ul></li><li><p>覆盖</p><ul><li><p>覆盖用于在扁平化（没有厚度）设计的界面上阐明两个相互独立的元素的位置关系。在实际上没有厚度、没有纵深概念扁平化设计中，覆盖动画的使用能让本来就非常有限的屏幕空间被更好的利用起来。</p><ul><li><img src="https://api2.mubu.com/v3/document_image/35387462-d51e-4bdf-9296-654fdd6ac43e-6086221.jpg" alt="image"></li></ul></li></ul></li><li><p>复制</p><ul><li><p>当元素被复制出来时，表达元素与元素之间的连续性的关系。这种动画能够非常清晰地表达因某个操作而产生的一个或数个事件发生以及它们之间的关系。</p><ul><li><img src="https://api2.mubu.com/v3/document_image/dafe0f06-6b14-41c1-bb67-c9688dfe6d54-6086221.jpg" alt="image"></li></ul></li></ul></li><li><p>景深</p><ul><li><p>允许用户瞥得到非主要元素或场景</p><ul><li><img src="https://api2.mubu.com/v3/document_image/9a74fd4a-a4e3-4691-926f-2e6de978bcdd-6086221.jpg" alt="image"></li></ul></li></ul></li><li><p>视差</p><ul><li><p>当用户滚动界面时，在平面创造出空间层次。用户在进行滚动操作的时候通过视差效果可以在扁平化的界面里面表现空间中各元素的位置及层级关系。这种效果还非常的美观高端，能让整个页面看起来更加活泼一些。通过视差的特性，我能引导用户去关注应该应该关注的地方，运动效率高的元素通常表达的是距离用户更近，适合承载更加有使用性意义的重要信息，而运动效率较低的元素通常表达的是距离用户较远，而且或许没有承载什么重要的信息。</p><ul><li><img src="https://api2.mubu.com/v3/document_image/0a5f32c1-23ca-4aa5-a7f4-9ee3eb472415-6086221.jpg" alt="image"></li></ul></li></ul></li><li><p>翻转</p><ul><li><p>将扁平化的界面元素多维化从而表达空间中各元素的位置及层级关系。其实扁平并不符人类认知逻辑的（而符合人类认知逻辑几乎可以说是可用性的第一原则），所以人们在扁平化的界面里面下足了功夫来在没有纵深和厚度的界面里表达纵深和厚度，这句话读起来非常拗口，但实际上就是这样的。多维化的使用比较少，因为添加纵深感有很多种手法（覆盖、蒙层、阴影，etc.），而多维化的开发成本是比较高的。</p><ul><li><img src="https://api2.mubu.com/v3/document_image/8724f1a7-5125-406d-9117-655faecdb1f2-6086221.jpg" alt="image"></li></ul></li></ul></li><li><p>镜头平移与缩放（Dolly &amp; Zoom）</p><ul><li><p>用连续的空间描述来引导界面元素和空间。镜头平移与缩放效果表明元素与空间之间的关系，也能表现出一种纵深感。</p><ul><li><img src="https://api2.mubu.com/v3/document_image/2e271943-096a-4f2f-8d5f-81efa80450d3-6086221.jpg" alt="image"></li></ul></li></ul></li><li><p>设计原则和设计考量</p><ul><li><p>一个优秀的交互微动效，在设计上应该遵循以下三个核心原则</p><ul><li><img src="https://api2.mubu.com/v3/document_image/23615fac-4d82-44f0-a27d-b97d19c7fdaf-6086221.jpg" alt="image"></li></ul></li><li><p>用户注意力</p><ul><li>当动效出现时，你希望用户的注意力被吸引到哪里</li></ul></li></ul></li><li><p>动效的目标</p><ul><li><p>a.吸引用户注意。思考是否需要用户一下子注意到动效并立刻采取行动</p></li><li><p>b.使特定元素再不同状态之间转换时保持视觉连续性</p></li><li><p>c.表明已经处于用户注意力范围内的不同元素间的层级关系</p></li></ul></li><li><p>出现的频率</p><ul><li>动效在一次会话中出现的次数</li></ul></li><li><p>触发的机制</p><ul><li><p>用户直接触发</p></li><li><p>用户间接触发</p></li></ul></li><li><p>响应时间与持续时间</p><p>时间是动效核心元素，设计动效时需要考虑两类时间——响应时间与持续时间</p><ul><li><p>响应时间</p><ul><li><p>响应时间指从用户执行操作到反馈出现的间隔时间。触发机制不同，响应时间的限制也不同</p><ul><li><p>对于由用户操作 直接触发 的反馈，理想的响应时间应该控制在 100毫秒内。</p></li><li><p>对于由用户操作 间接触发 的反馈，响应时长可允许达到 1秒左右，不可 超过2秒 无反馈。</p></li><li><p>当 超过2秒 才能获取反馈结果时，须设计加载动效（loading）。</p></li><li><p>当反馈时间为 2-9秒 时，可使用循环的加载样式（如常见的菊花转）。</p></li><li><p>当反馈时间 超过10秒 时，须使用带有进度指示的加载样式（如已加载了60%，还剩30秒）。</p></li></ul></li></ul></li></ul></li><li><p>持续时间</p><ul><li><p>交互微动效的持续时间不宜过长，以避免浪费用户时间，影响用户的阅读和操作效率，其持续时间一般不超过500毫秒 ( 加载动效除外 )。</p></li><li><p>若你希望用户能清晰地捕捉到元素的渐进变化，持续时须大于200毫秒；若你不介意用户认为元素的改变是瞬间的，希望尽量节省用户时间，持续时间也可设计在 200毫秒以内（如hover到按钮上颜色瞬间发生微妙改变） 。</p></li><li><p>具体的持续时间的取值，一方面会受到元素的大小、动效的复杂程度影响；另一方面也会受到动效的目标 和 运行动效的设备的影响：</p><ul><li><p>小元素的轻微变化效果（如渐隐渐现、大小变化等小范围变化），一般在 200~300毫秒以内。</p></li><li><p>较大元素的复杂变化效果（如包含大范围缓动位移），可长达 400-500毫秒。</p></li><li><p>较快的动效更容易吸引用户注意力，也更节省时间。若动效元素在用户的视线之外，为了吸引用户注意并采取行动，可使用在短时间内变化较大的动效（如发生位置移动和速率改变）；若动效元素已经在用户的注意范围内，为了保持视觉连续性，完成必要的过渡（如渐隐渐现）后即可结束。</p></li><li><p>较慢的动效较少分散用户注意力，更适用于非用户直接触发的场景。若动效不是用户直接触发的，不希望用户注意力被转移，可使用在长时间内变化较小的动效（一般不会出现位置移动）。</p></li><li><p>不同设备的屏幕尺寸和特性不同，理想的持续时间也不一样。一般来说，对于移动设备而言，屏幕越大往往动效的位移也越大，因此持续时间也应该越长（可穿戴设备上的持续时间大约比手机上快30%，平板电脑上的持续时间大约比手机上慢30%）。而台式设备的动效设计往往比移动设备中的动效设计更简单快速（150毫秒~200毫秒间较为常见），这是因为复杂的动效在台式设备场景下容易出现掉帧、卡顿的情况，瞬时响应的动效能避免这一点。</p><ul><li><img src="https://api2.mubu.com/v3/document_image/3a63f3a0-5757-4bbb-b023-2c12ff63b8c6-6086221.jpg" alt="image"></li></ul></li><li><p>出场动效一般比入场动效更快 ( 如当入场动效设置为230毫秒时，出场动效可设置为200毫秒) 这是因为元素入场时用户一般需要阅读并处理新出现的信息，而元素出场时通常表明用户在此元素上的任务已完成，不需要再关注了，快速出场能够节省用户更多时间。</p></li></ul></li></ul></li></ul>',1),m=[e];function t(c,g,d,o,s,b){return p(),i("div",null,m)}const n=l(a,[["render",t]]);export{_ as __pageData,n as default};
