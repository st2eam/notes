import{_ as h,E as l,c as k,J as a,w as n,m as s,a as t,a4 as p,o as e}from"./chunks/framework.COET-Ywn.js";const b=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"Design Patterns/备忘录模式.md","filePath":"Design Patterns/备忘录模式.md"}'),E={name:"Design Patterns/备忘录模式.md"},r=s("h2",{id:"备忘录模式",tabindex:"-1"},[t("备忘录模式 "),s("a",{class:"header-anchor",href:"#备忘录模式","aria-label":'Permalink to "备忘录模式"'},"​")],-1),d=s("p",null,"备忘录模式（Memento Pattern）是一种行为设计模式， 允许在不暴露对象实现细节的情况下保存和恢复对象之前的状态。",-1),g=s("img",{src:"https://refactoringguru.cn/images/patterns/content/memento/memento-zh.png"},null,-1),y=s("h3",{id:"备忘录模式结构",tabindex:"-1"},[t("备忘录模式结构 "),s("a",{class:"header-anchor",href:"#备忘录模式结构","aria-label":'Permalink to "备忘录模式结构"'},"​")],-1),o=s("img",{src:"https://refactoringguru.cn/images/patterns/diagrams/memento/structure1-indexed.png"},null,-1),c=p("",23);function F(u,m,C,A,B,v){const i=l("center");return e(),k("div",null,[r,d,a(i,null,{default:n(()=>[g]),_:1}),y,a(i,null,{default:n(()=>[o]),_:1}),c])}const S=h(E,[["render",F]]);export{b as __pageData,S as default};
