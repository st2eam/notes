import{_ as e,c as t,a2 as n,o as p}from"./chunks/framework.BW-ZVgUE.js";const d=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"Python/NumPy/index.md","filePath":"Python/NumPy/index.md"}'),r={name:"Python/NumPy/index.md"};function o(u,a,m,y,h,i){return p(),t("div",null,a[0]||(a[0]=[n('<h2 id="什么是-numpy" tabindex="-1">什么是 NumPy？ <a class="header-anchor" href="#什么是-numpy" aria-label="Permalink to &quot;什么是 NumPy？&quot;">​</a></h2><p>NumPy 是用于处理数组的 python 库。</p><p>它还拥有在线性代数、傅立叶变换和矩阵领域中工作的函数。</p><p>NumPy 由 Travis Oliphant 于 2005 年创建。它是一个开源项目，您可以自由使用它。</p><p>NumPy 指的是数值 Python（Numerical Python）。</p><h2 id="为何使用-numpy" tabindex="-1">为何使用 NumPy？ <a class="header-anchor" href="#为何使用-numpy" aria-label="Permalink to &quot;为何使用 NumPy？&quot;">​</a></h2><p>在 Python 中，我们有满足数组功能的列表，但是处理起来很慢。</p><p>NumPy 旨在提供一个比传统 Python 列表快 50 倍的数组对象。</p><p>NumPy 中的数组对象称为 <code>ndarray</code>，它提供了许多支持函数，使得利用 <code>ndarray</code> 非常容易。</p><p>数组在数据科学中非常常用，因为速度和资源非常重要。</p><p>数据科学：计算机科学的一个分支，研究如何存储、使用和分析数据以从中获取信息。</p><h2 id="为什么-numpy-比列表快" tabindex="-1">为什么 NumPy 比列表快？ <a class="header-anchor" href="#为什么-numpy-比列表快" aria-label="Permalink to &quot;为什么 NumPy 比列表快？&quot;">​</a></h2><p>与列表不同，NumPy 数组存储在内存中的一个连续位置，因此进程可以非常有效地访问和操纵它们。</p><p>这种行为在计算机科学中称为引用的局部性。</p><p>这是 NumPy 比列表更快的主要原因。它还经过了优化，可与最新的 CPU 体系结构一同使用。</p><h2 id="numpy-用哪种语言编写" tabindex="-1">NumPy 用哪种语言编写？ <a class="header-anchor" href="#numpy-用哪种语言编写" aria-label="Permalink to &quot;NumPy 用哪种语言编写？&quot;">​</a></h2><p>NumPy 是一个 Python 库，部分用 Python 编写，但是大多数需要快速计算的部分都是用 C 或 C ++ 编写的。</p><h2 id="numpy-源码" tabindex="-1">NumPy 源码 <a class="header-anchor" href="#numpy-源码" aria-label="Permalink to &quot;NumPy 源码&quot;">​</a></h2><p>NumPy 的源代码位于这个 github 资料库中：<a href="https://github.com/numpy/numpy" target="_blank" rel="noreferrer">https://github.com/numpy/numpy</a></p>',19)]))}const l=e(r,[["render",o]]);export{d as __pageData,l as default};
