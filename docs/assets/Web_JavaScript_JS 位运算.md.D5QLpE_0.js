import{_ as s,c as t,o as a,a4 as i}from"./chunks/framework.B-C7vMfR.js";const g=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"Web/JavaScript/JS 位运算.md","filePath":"Web/JavaScript/JS 位运算.md"}'),n={name:"Web/JavaScript/JS 位运算.md"},h=i(`<h2 id="javascript-使用-32-位按位运算数" tabindex="-1">JavaScript 使用 32 位按位运算数 <a class="header-anchor" href="#javascript-使用-32-位按位运算数" aria-label="Permalink to &quot;JavaScript 使用 32 位按位运算数&quot;">​</a></h2><p>JavaScript 将数字存储为 64 位浮点数，但所有按位运算都以 32 位二进制数执行。</p><p>在执行位运算之前，JavaScript 将数字转换为 32 位有符号整数。</p><p>执行按位操作后，结果将转换回 64 位 JavaScript 数。</p><p>上面的例子使用 4 位无符号二进制数。所以 ~ 5 返回 10。</p><p>由于 JavaScript 使用 32 位有符号整数，JavaScript 将返回 -6。</p><p>00000000000000000000000000000101 (5)</p><p>11111111111111111111111111111010 (~5 = -6)</p><p>有符号整数使用最左边的位作为减号。</p><h2 id="javascript-位运算符" tabindex="-1">JavaScript 位运算符 <a class="header-anchor" href="#javascript-位运算符" aria-label="Permalink to &quot;JavaScript 位运算符&quot;">​</a></h2><table><tbody><tr><th>运算符</th><th>名称</th><th>描述</th></tr><tr><td>&amp;</td><td>AND</td><td>如果两位都是 1 则设置每位为 1</td></tr><tr><td>|</td><td>OR</td><td>如果两位之一为 1 则设置每位为 1</td></tr><tr><td>^</td><td>XOR</td><td>如果两位只有一位为 1 则设置每位为 1</td></tr><tr><td>~</td><td>NOT</td><td>反转所有位</td></tr><tr><td>&lt;&lt;</td><td>零填充左位移</td><td>通过从右推入零向左位移，并使最左边的位脱落。</td></tr><tr><td>&gt;&gt;</td><td>有符号右位移</td><td>通过从左推入最左位的拷贝来向右位移，并使最右边的位脱落。</td></tr><tr><td>&gt;&gt;&gt;</td><td>零填充右位移</td><td>通过从左推入零来向右位移，并使最右边的位脱落。</td></tr></tbody></table><h3 id="把十进制转换为二进制" tabindex="-1">把十进制转换为二进制 <a class="header-anchor" href="#把十进制转换为二进制" aria-label="Permalink to &quot;把十进制转换为二进制&quot;">​</a></h3><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> dec2bin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">dec</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">){</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (dec </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;&gt;&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">toString</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="把二进制转换为十进制" tabindex="-1">把二进制转换为十进制 <a class="header-anchor" href="#把二进制转换为十进制" aria-label="Permalink to &quot;把二进制转换为十进制&quot;">​</a></h3><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> bin2dec</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">bin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">){</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> parseInt</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(bin, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">toString</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div>`,15),p=[h];function e(d,l,r,k,c,o){return a(),t("div",null,p)}const y=s(n,[["render",e]]);export{g as __pageData,y as default};
