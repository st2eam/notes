import{_ as t,c as e,o as l,a4 as d}from"./chunks/framework.BtaI5osv.js";const p=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"Python/python基础/python运算符.md","filePath":"Python/python基础/python运算符.md"}'),a={name:"Python/python基础/python运算符.md"},n=d('<h2 id="python-运算符" tabindex="-1">Python 运算符 <a class="header-anchor" href="#python-运算符" aria-label="Permalink to &quot;Python 运算符&quot;">​</a></h2><p>运算符用于对变量和值执行操作。</p><h3 id="python-算术运算符" tabindex="-1">Python 算术运算符 <a class="header-anchor" href="#python-算术运算符" aria-label="Permalink to &quot;Python 算术运算符&quot;">​</a></h3><p>算术运算符与数值一起使用来执行常见的数学运算：</p><table><thead><tr><th style="text-align:left;">运算符</th><th style="text-align:left;">名称</th><th style="text-align:left;">实例</th></tr></thead><tbody><tr><td style="text-align:left;">+</td><td style="text-align:left;">加</td><td style="text-align:left;">x + y</td></tr><tr><td style="text-align:left;">-</td><td style="text-align:left;">减</td><td style="text-align:left;">x - y</td></tr><tr><td style="text-align:left;">*</td><td style="text-align:left;">乘</td><td style="text-align:left;">x * y</td></tr><tr><td style="text-align:left;">/</td><td style="text-align:left;">除</td><td style="text-align:left;">x / y</td></tr><tr><td style="text-align:left;">%</td><td style="text-align:left;">取模</td><td style="text-align:left;">x % y</td></tr><tr><td style="text-align:left;">**</td><td style="text-align:left;">幂</td><td style="text-align:left;">x ** y</td></tr><tr><td style="text-align:left;">//</td><td style="text-align:left;">地板除（取整除）</td><td style="text-align:left;">x // y</td></tr></tbody></table><h3 id="python-赋值运算符" tabindex="-1">Python 赋值运算符 <a class="header-anchor" href="#python-赋值运算符" aria-label="Permalink to &quot;Python 赋值运算符&quot;">​</a></h3><p>赋值运算符用于为变量赋值：</p><table><thead><tr><th style="text-align:left;">运算符</th><th style="text-align:left;">实例</th><th style="text-align:left;">等同于</th></tr></thead><tbody><tr><td style="text-align:left;">=</td><td style="text-align:left;">x = 5</td><td style="text-align:left;">x = 5</td></tr><tr><td style="text-align:left;">+=</td><td style="text-align:left;">x += 3</td><td style="text-align:left;">x = x + 3</td></tr><tr><td style="text-align:left;">-=</td><td style="text-align:left;">x -= 3</td><td style="text-align:left;">x = x - 3</td></tr><tr><td style="text-align:left;">*=</td><td style="text-align:left;">x *= 3</td><td style="text-align:left;">x = x * 3</td></tr><tr><td style="text-align:left;">/=</td><td style="text-align:left;">x /= 3</td><td style="text-align:left;">x = x / 3</td></tr><tr><td style="text-align:left;">%=</td><td style="text-align:left;">x %= 3</td><td style="text-align:left;">x = x % 3</td></tr><tr><td style="text-align:left;">//=</td><td style="text-align:left;">x //= 3</td><td style="text-align:left;">x = x // 3</td></tr><tr><td style="text-align:left;">**=</td><td style="text-align:left;">x **= 3</td><td style="text-align:left;">x = x ** 3</td></tr><tr><td style="text-align:left;">&amp;=</td><td style="text-align:left;">x &amp;= 3</td><td style="text-align:left;">x = x &amp; 3</td></tr><tr><td style="text-align:left;">|=</td><td style="text-align:left;">x |= 3</td><td style="text-align:left;">x = x | 3</td></tr><tr><td style="text-align:left;">^=</td><td style="text-align:left;">x ^= 3</td><td style="text-align:left;">x = x ^ 3</td></tr><tr><td style="text-align:left;">&gt;&gt;=</td><td style="text-align:left;">x &gt;&gt;= 3</td><td style="text-align:left;">x = x &gt;&gt; 3</td></tr><tr><td style="text-align:left;">&lt;&lt;=</td><td style="text-align:left;">x &lt;&lt;= 3</td><td style="text-align:left;">x = x &lt;&lt; 3</td></tr></tbody></table><h3 id="python-比较运算符" tabindex="-1">Python 比较运算符 <a class="header-anchor" href="#python-比较运算符" aria-label="Permalink to &quot;Python 比较运算符&quot;">​</a></h3><p>比较运算符用于比较两个值：</p><table><thead><tr><th style="text-align:left;">运算符</th><th style="text-align:left;">名称</th><th style="text-align:left;">实例</th></tr></thead><tbody><tr><td style="text-align:left;">==</td><td style="text-align:left;">等于</td><td style="text-align:left;">x == y</td></tr><tr><td style="text-align:left;">!=</td><td style="text-align:left;">不等于</td><td style="text-align:left;">x != y</td></tr><tr><td style="text-align:left;">&gt;</td><td style="text-align:left;">大于</td><td style="text-align:left;">x &gt; y</td></tr><tr><td style="text-align:left;">&lt;</td><td style="text-align:left;">小于</td><td style="text-align:left;">x &lt; y</td></tr><tr><td style="text-align:left;">&gt;=</td><td style="text-align:left;">大于或等于</td><td style="text-align:left;">x &gt;= y</td></tr><tr><td style="text-align:left;">&lt;=</td><td style="text-align:left;">小于或等于</td><td style="text-align:left;">x &lt;= y</td></tr></tbody></table><h3 id="python-逻辑运算符" tabindex="-1">Python 逻辑运算符 <a class="header-anchor" href="#python-逻辑运算符" aria-label="Permalink to &quot;Python 逻辑运算符&quot;">​</a></h3><p>逻辑运算符用于组合条件语句：</p><table><thead><tr><th style="text-align:left;">运算符</th><th style="text-align:left;">描述</th><th style="text-align:left;">实例</th></tr></thead><tbody><tr><td style="text-align:left;">and</td><td style="text-align:left;">如果两个语句都为真，则返回 True。</td><td style="text-align:left;">x &gt; 3 and x &lt; 10</td></tr><tr><td style="text-align:left;">or</td><td style="text-align:left;">如果其中一个语句为真，则返回 True。</td><td style="text-align:left;">x &gt; 3 or x &lt; 4</td></tr><tr><td style="text-align:left;">not</td><td style="text-align:left;">反转结果，如果结果为 true，则返回 False</td><td style="text-align:left;">not(x &gt; 3 and x &lt; 10)</td></tr></tbody></table><h3 id="python-身份运算符" tabindex="-1">Python 身份运算符 <a class="header-anchor" href="#python-身份运算符" aria-label="Permalink to &quot;Python 身份运算符&quot;">​</a></h3><p>身份运算符用于比较对象，不是比较它们是否相等，但如果它们实际上是同一个对象，则具有相同的内存位置：</p><table><thead><tr><th style="text-align:left;">运算符</th><th style="text-align:left;">描述</th><th style="text-align:left;">实例</th></tr></thead><tbody><tr><td style="text-align:left;">is</td><td style="text-align:left;">如果两个变量是同一个对象，则返回 true。</td><td style="text-align:left;">x is y</td></tr><tr><td style="text-align:left;">is not</td><td style="text-align:left;">如果两个变量不是同一个对象，则返回 true。</td><td style="text-align:left;">x is not y</td></tr></tbody></table><h3 id="python-成员运算符" tabindex="-1">Python 成员运算符 <a class="header-anchor" href="#python-成员运算符" aria-label="Permalink to &quot;Python 成员运算符&quot;">​</a></h3><p>成员资格运算符用于测试序列是否在对象中出现：</p><table><thead><tr><th style="text-align:left;">运算符</th><th style="text-align:left;">描述</th><th style="text-align:left;">实例</th></tr></thead><tbody><tr><td style="text-align:left;">in</td><td style="text-align:left;">如果对象中存在具有指定值的序列，则返回 True。</td><td style="text-align:left;">x in y</td></tr><tr><td style="text-align:left;">not in</td><td style="text-align:left;">如果对象中不存在具有指定值的序列，则返回 True。</td><td style="text-align:left;">x not in y</td></tr></tbody></table><h3 id="python-位运算符" tabindex="-1">Python 位运算符 <a class="header-anchor" href="#python-位运算符" aria-label="Permalink to &quot;Python 位运算符&quot;">​</a></h3><p>位运算符用于比较（二进制）数字：</p><table><thead><tr><th style="text-align:left;">运算符</th><th style="text-align:left;">描述</th><th style="text-align:left;">实例</th></tr></thead><tbody><tr><td style="text-align:left;">&amp;</td><td style="text-align:left;">AND</td><td style="text-align:left;">如果两个位均为 1，则将每个位设为 1。</td></tr><tr><td style="text-align:left;">|</td><td style="text-align:left;">OR</td><td style="text-align:left;">如果两位中的一位为 1，则将每个位设为 1。</td></tr><tr><td style="text-align:left;">^</td><td style="text-align:left;">XOR</td><td style="text-align:left;">如果两个位中只有一位为 1，则将每个位设为 1。</td></tr><tr><td style="text-align:left;">~</td><td style="text-align:left;">NOT</td><td style="text-align:left;">反转所有位。</td></tr><tr><td style="text-align:left;">&lt;&lt;</td><td style="text-align:left;">Zero fill left shift</td><td style="text-align:left;">通过从右侧推入零来向左移动，推掉最左边的位。</td></tr><tr><td style="text-align:left;">&gt;&gt;</td><td style="text-align:left;">Signed right shift</td><td style="text-align:left;">通过从左侧推入最左边的位的副本向右移动，推掉最右边的位。</td></tr></tbody></table>',23),y=[n];function x(i,s,r,f,g,h){return l(),e("div",null,y)}const b=t(a,[["render",x]]);export{p as __pageData,b as default};
