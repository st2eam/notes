import{_ as l,c as a,o as i,a4 as e}from"./chunks/framework.B-C7vMfR.js";const b=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"Web/HTML/网站与网页.md","filePath":"Web/HTML/网站与网页.md"}'),t={name:"Web/HTML/网站与网页.md"},r=e('<h2 id="网站" tabindex="-1">网站 <a class="header-anchor" href="#网站" aria-label="Permalink to &quot;网站&quot;">​</a></h2><h3 id="网站组成" tabindex="-1">网站组成 <a class="header-anchor" href="#网站组成" aria-label="Permalink to &quot;网站组成&quot;">​</a></h3><p>网站由域名、服务器、网页3部分组成</p><ul><li><p>域名（Domain Name System，DNS）</p><ul><li>在访问网站时在浏览器地址栏中输入的网址</li><li>域名管理系统进行全球统一管理的，用来映射主机IP地址</li></ul></li><li><p>服务器</p><ul><li>Web服务器，也称为“WWW服务器”(World Wide Web)</li><li>响应来自浏览器的请求，并且发送出网页的软件与硬件</li><li>服务器软件：Apache、Microsoft IIS、Tomcat、Google GWS</li></ul></li></ul><h2 id="网页" tabindex="-1">网页 <a class="header-anchor" href="#网页" aria-label="Permalink to &quot;网页&quot;">​</a></h2><ul><li>Web服务器的工作原理</li><li>Web页面组成元素</li><li>网站文件目录结构</li></ul><h3 id="基本概念" tabindex="-1">基本概念 <a class="header-anchor" href="#基本概念" aria-label="Permalink to &quot;基本概念&quot;">​</a></h3><h3 id="internet" tabindex="-1">Internet <a class="header-anchor" href="#internet" aria-label="Permalink to &quot;Internet&quot;">​</a></h3><p>Internet是一个全球性计算机网络</p><h3 id="www" tabindex="-1">WWW <a class="header-anchor" href="#www" aria-label="Permalink to &quot;WWW&quot;">​</a></h3><ul><li><p>一个由许多互相链接的超文本文档组成的系统，通过互联网访问。 在这个系统中，每个有用的事物，称为一样“资源”；并且由一个全局“统一资源标识符”（URI）标识；这些资源通过超文本传输协议（Hypertext Transfer Protocol）传送给用户，而后者通过点击链接来获得资源。</p></li><li><p>万维网联盟（World Wide Web Consortium，简称W3C），又称W3C理事会。1994年10月在麻省理工学院（MIT）计算机科学实验室成立。万维网联盟的创建者是万维网的发明者<strong>蒂姆·伯纳斯-李</strong></p></li></ul><h3 id="url" tabindex="-1">URL <a class="header-anchor" href="#url" aria-label="Permalink to &quot;URL&quot;">​</a></h3><p>Uniform Resource Locator</p><ul><li><p>一般格式：</p></li><li><p>访问协议://主机域名或IP地址/路径/文件名</p></li></ul><h3 id="http" tabindex="-1">HTTP <a class="header-anchor" href="#http" aria-label="Permalink to &quot;HTTP&quot;">​</a></h3><p>定义了客户和服务器之间请求与应答的格式</p><h4 id="http请求的组成" tabindex="-1">HTTP请求的组成 <a class="header-anchor" href="#http请求的组成" aria-label="Permalink to &quot;HTTP请求的组成&quot;">​</a></h4><ul><li><p>方法：指定对所请求对象的操作</p></li><li><p>URI：UNIVERSAL RESOURCE IDENTIFIER标识所请求的对象；</p></li><li><p>协议版本号；</p></li><li><p>其它信息,用来补充或修改请求。</p></li></ul><h4 id="http请求的方法" tabindex="-1">HTTP请求的方法 <a class="header-anchor" href="#http请求的方法" aria-label="Permalink to &quot;HTTP请求的方法&quot;">​</a></h4><ul><li><p>GET------返回所指对象</p></li><li><p>HEAD------返回关于对象的信息</p></li><li><p>POST------将某种信息送给服务器/对象</p></li><li><p>PUT------用一个新拷贝对象替换</p></li><li><p>DELETE------删除对象</p></li></ul><h4 id="http回答的组成" tabindex="-1">HTTP回答的组成 <a class="header-anchor" href="#http回答的组成" aria-label="Permalink to &quot;HTTP回答的组成&quot;">​</a></h4><ul><li><p>状态行：版本号、状态码、解释</p></li><li><p>关于返回内容的描述：MIME类型、长度等</p></li><li><p>空行</p></li><li><p>返回内容</p></li></ul><h4 id="http协议的特点" tabindex="-1">HTTP协议的特点 <a class="header-anchor" href="#http协议的特点" aria-label="Permalink to &quot;HTTP协议的特点&quot;">​</a></h4><ol><li><p><strong>支持客户/服务器模式;</strong></p></li><li><p><strong>简单快速;</strong></p></li></ol><ul><li>客户向服务器请求服务时，只需传送请求方法和路径。请求方法常用的有GET、HEAD、POST。每种方法规定了客户与服务器联系的类型不同。由于HTTP协议简单，使得HTTP服务器的程序规模小，因而通信速度很快。</li></ul><ol start="3"><li><strong>灵活;</strong></li></ol><ul><li>HTTP允许传输任意类型的数据对象。</li></ul><ol start="4"><li><strong>无连接;</strong></li></ol><ul><li>限制每次连接只处理一个请求。服务器处理完客户的请求，并收到客户的应答后，即断开连接。采用这种方式可以节省传输时间。</li></ul><ol start="5"><li><strong>无状态;</strong></li></ol><ul><li>指协议对于事务处理没有记忆能力，服务器不知道客户端是什么状态。即我们给服务器发送 HTTP 请求之后，服务器根据请求，会给我们发送数据过来，但是，发送完，不会记录任何信息。</li></ul><h3 id="html5" tabindex="-1">HTML5 <a class="header-anchor" href="#html5" aria-label="Permalink to &quot;HTML5&quot;">​</a></h3><ul><li><p>文档结构标签(语义元素)，如header、nav、 article、footer、section等</p></li><li><p>用于绘画的canvas元素；</p></li><li><p>用于媒体播放回放的video和audio元素；</p></li><li><p>对本地离线存储的更好支持；</p></li><li><p>新的表单控件，如calendar、date、time、email、url、search等</p></li><li><p>解决了浏览器兼容性问题</p></li><li><p>增强了Web应用程序的功能，使Web客户端具有处理数据的能力</p></li></ul><h3 id="html" tabindex="-1">HTML <a class="header-anchor" href="#html" aria-label="Permalink to &quot;HTML&quot;">​</a></h3><ul><li><p>HTML (Hyper Text Markup Language,超文本标记语言)，是 WWW 的描述语言</p><ul><li>表示网页信息的符号标记语言,文件的后缀一般是.html, .htm，由浏览器负责解释执行</li></ul></li><li><p>XHTML (eXtensible HyperText Markup Language, 可扩展超文本标记语言)</p><ul><li>在XML (eXtensible Markup Language)的基础上，对HTML进行改造</li><li>语法上更加严格</li></ul></li></ul>',35),o=[r];function p(h,n,u,s,d,c){return i(),a("div",null,o)}const P=l(t,[["render",p]]);export{b as __pageData,P as default};
