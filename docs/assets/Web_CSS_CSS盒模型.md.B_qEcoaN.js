import{_ as a,c as s,o as i,a4 as e}from"./chunks/framework.B-C7vMfR.js";const S=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"Web/CSS/CSS盒模型.md","filePath":"Web/CSS/CSS盒模型.md"}'),t={name:"Web/CSS/CSS盒模型.md"},n=e(`<h2 id="盒模型" tabindex="-1">盒模型 <a class="header-anchor" href="#盒模型" aria-label="Permalink to &quot;盒模型&quot;">​</a></h2><h3 id="css-box-sizing" tabindex="-1">CSS Box Sizing <a class="header-anchor" href="#css-box-sizing" aria-label="Permalink to &quot;CSS Box Sizing&quot;">​</a></h3><p>CSS box-sizing 属性允许我们在元素的总宽度和高度中包括内边距（填充）和边框。</p><h4 id="假如不指定-css-box-sizing-属性" tabindex="-1">假如不指定 CSS box-sizing 属性 <a class="header-anchor" href="#假如不指定-css-box-sizing-属性" aria-label="Permalink to &quot;假如不指定 CSS box-sizing 属性&quot;">​</a></h4><p>默认情况下，元素的宽度和高度是这样计算的：</p><p>width + padding + border = 元素的实际宽度 height + padding + border = 元素的实际高度</p><p><img src="https://www.w3school.com.cn/i/css/boxmodel.gif" alt="image"></p><h4 id="如果使用-css-box-sizing-属性" tabindex="-1">如果使用 CSS box-sizing 属性 <a class="header-anchor" href="#如果使用-css-box-sizing-属性" aria-label="Permalink to &quot;如果使用 CSS box-sizing 属性&quot;">​</a></h4><p>box-sizing 属性允许我们在元素的总宽度和高度中包括内边距和边框。</p><p>如果在元素上设置了 box-sizing: border-box;，则宽度和高度会包括内边距和边框：</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  box-sizing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">border-box</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="css-内边距" tabindex="-1">CSS 内边距 <a class="header-anchor" href="#css-内边距" aria-label="Permalink to &quot;CSS 内边距&quot;">​</a></h3><p>CSS padding 属性用于在任何定义的边界内的元素内容周围生成空间。</p><h3 id="css-外边距" tabindex="-1">CSS 外边距 <a class="header-anchor" href="#css-外边距" aria-label="Permalink to &quot;CSS 外边距&quot;">​</a></h3><p>CSS margin 属性用于在任何定义的边框之外，为元素周围创建空间。</p><p>如果 margin 属性有四个值：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>margin: 25px 50px 75px 100px;</span></span></code></pre></div><p>上外边距是 25px<br> 右外边距是 50px<br> 下外边距是 75px<br> 左外边距是 100px</p><h3 id="auto-值" tabindex="-1">auto 值 <a class="header-anchor" href="#auto-值" aria-label="Permalink to &quot;auto 值&quot;">​</a></h3><p>您可以将 margin 属性设置为 auto，以使元素在其容器中水平居中。</p>`,20),o=[n];function p(r,h,l,c,d,b){return i(),s("div",null,o)}const x=a(t,[["render",p]]);export{S as __pageData,x as default};
