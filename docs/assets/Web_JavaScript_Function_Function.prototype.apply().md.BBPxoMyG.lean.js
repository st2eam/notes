import{_ as e,c as t,a2 as o,o as p}from"./chunks/framework.BW-ZVgUE.js";const u=JSON.parse('{"title":"Function.prototype.apply()","description":"","frontmatter":{},"headers":[],"relativePath":"Web/JavaScript/Function/Function.prototype.apply().md","filePath":"Web/JavaScript/Function/Function.prototype.apply().md"}'),i={name:"Web/JavaScript/Function/Function.prototype.apply().md"};function n(c,a,s,d,r,l){return p(),t("div",null,a[0]||(a[0]=[o(`<h1 id="function-prototype-apply" tabindex="-1">Function.prototype.apply() <a class="header-anchor" href="#function-prototype-apply" aria-label="Permalink to &quot;Function.prototype.apply()&quot;">​</a></h1><p><code>Function</code> 实例的 <code>apply()</code> 方法会以给定的 <code>this</code> 值和作为数组（或类数组对象）提供的 <code>arguments</code> 调用该函数。</p><h2 id="语法" tabindex="-1">语法 <a class="header-anchor" href="#语法" aria-label="Permalink to &quot;语法&quot;">​</a></h2><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">apply</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(thisArg)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">apply</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(thisArg, argsArray)</span></span></code></pre></div><h2 id="参数" tabindex="-1">参数 <a class="header-anchor" href="#参数" aria-label="Permalink to &quot;参数&quot;">​</a></h2><p><code>thisArg</code></p><p>调用 <code>func</code> 时提供的 <code>this</code> 值。如果函数不处于严格模式，则 <code>null</code> 和 <code>undefined</code> 会被替换为全局对象，原始值会被转换为对象。</p><p><code>argsArray</code> 可选</p><p>一个类数组对象，用于指定调用 <code>func</code> 时的参数，或者如果不需要向函数提供参数，则为 <code>null</code> 或 <code>undefined</code>。</p><h2 id="返回值" tabindex="-1">返回值 <a class="header-anchor" href="#返回值" aria-label="Permalink to &quot;返回值&quot;">​</a></h2><p>使用指定的 <code>this</code> 值和参数调用函数的结果。</p>`,11)]))}const y=e(i,[["render",n]]);export{u as __pageData,y as default};
