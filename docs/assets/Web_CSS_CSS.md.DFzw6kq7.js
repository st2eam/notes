import{_ as s,c as i,o as a,a4 as t}from"./chunks/framework.B-C7vMfR.js";const E=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"Web/CSS/CSS.md","filePath":"Web/CSS/CSS.md"}'),e={name:"Web/CSS/CSS.md"},l=t('<h3 id="外部-css" tabindex="-1">外部 CSS <a class="header-anchor" href="#外部-css" aria-label="Permalink to &quot;外部 CSS&quot;">​</a></h3><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">link</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> rel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;stylesheet&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;text/css&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> href</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;mystyle.css&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><h3 id="内部-css" tabindex="-1">内部 CSS <a class="header-anchor" href="#内部-css" aria-label="Permalink to &quot;内部 CSS&quot;">​</a></h3><p>内部样式是在 head 部分的 <code>&lt;style&gt;</code> 元素中进行定义。</p><h3 id="行内-css" tabindex="-1">行内 CSS <a class="header-anchor" href="#行内-css" aria-label="Permalink to &quot;行内 CSS&quot;">​</a></h3><p>行内样式具有最高优先级，并且将覆盖外部和内部样式以及浏览器默认样式。</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> style=&quot;color:red;&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">This is </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">a</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> paragraph.&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div><h3 id="css的值和单位" tabindex="-1">CSS的值和单位 <a class="header-anchor" href="#css的值和单位" aria-label="Permalink to &quot;CSS的值和单位&quot;">​</a></h3><ul><li><p><strong>px</strong>，像素，绝对单位</p></li><li><p><strong>em</strong>，在 font-size 中使用是相对于父元素的字体大小，在其他属性中使用是相对于自身的字体大小，如 width</p></li><li><p><strong>rem</strong>，html 根元素的字体大小</p></li><li><p><strong>百分比</strong>，在许多情况下，百分比与长度的处理方法是一样的。百分比的问题在于，它们总是相对于其他值设置的。例如，如果将元素的字体大小设置为百分比，那么它将是元素父元素字体大小的百分比。如果使用百分比作为宽度值，那么它将是父值宽度的百分比。</p></li><li><p><strong>数字</strong>，有些值接受数字，不添加任何单位。接受无单位数字的属性的一个例子是不透明度属性（opacity ），它控制元素的不透明度(它的透明程度)。此属性接受0(完全透明)和1(完全不透明)之间的数字。</p></li></ul>',9),h=[l];function n(p,r,o,k,d,c){return a(),i("div",null,h)}const S=s(e,[["render",n]]);export{E as __pageData,S as default};
