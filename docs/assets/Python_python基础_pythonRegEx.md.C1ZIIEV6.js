import{_ as s,c as i,o as a,a4 as t}from"./chunks/framework.B-C7vMfR.js";const E=JSON.parse('{"title":"Python 正则表达式","description":"","frontmatter":{},"headers":[],"relativePath":"Python/python基础/pythonRegEx.md","filePath":"Python/python基础/pythonRegEx.md"}'),e={name:"Python/python基础/pythonRegEx.md"},h=t(`<h1 id="python-正则表达式" tabindex="-1">Python 正则表达式 <a class="header-anchor" href="#python-正则表达式" aria-label="Permalink to &quot;Python 正则表达式&quot;">​</a></h1><p><strong>RegEx 或正则表达式是形成搜索模式的字符序列。</strong></p><p><strong>RegEx 可用于检查字符串是否包含指定的搜索模式。</strong></p><h2 id="regex-模块" tabindex="-1">RegEx 模块 <a class="header-anchor" href="#regex-模块" aria-label="Permalink to &quot;RegEx 模块&quot;">​</a></h2><p>Python 提供名为 <code>re</code> 的内置包，可用于处理正则表达式。</p><p>导入 <code>re</code> 模块：</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> re</span></span></code></pre></div><h2 id="regex-函数" tabindex="-1">RegEx 函数 <a class="header-anchor" href="#regex-函数" aria-label="Permalink to &quot;RegEx 函数&quot;">​</a></h2><p><code>re</code> 模块提供了一组函数，允许我们检索字符串以进行匹配：</p><table><thead><tr><th style="text-align:left;">函数</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;">findall</td><td style="text-align:left;">返回包含所有匹配项的列表</td></tr><tr><td style="text-align:left;">search</td><td style="text-align:left;">如果字符串中的任意位置存在匹配，则返回 Match 对象</td></tr><tr><td style="text-align:left;">split</td><td style="text-align:left;">返回在每次匹配时拆分字符串的列表</td></tr><tr><td style="text-align:left;">sub</td><td style="text-align:left;">用字符串替换一个或多个匹配项</td></tr></tbody></table><h2 id="findall-函数" tabindex="-1">findall() 函数 <a class="header-anchor" href="#findall-函数" aria-label="Permalink to &quot;findall() 函数&quot;">​</a></h2><p><code>findall()</code> 函数返回包含所有匹配项的列表。</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">str</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;China is a great country&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> re.findall(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;a&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">str</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x)</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># [&#39;a&#39;, &#39;a&#39;, &#39;a&#39;]</span></span></code></pre></div><h2 id="search-函数" tabindex="-1">search() 函数 <a class="header-anchor" href="#search-函数" aria-label="Permalink to &quot;search() 函数&quot;">​</a></h2><p><code>search()</code> 函数搜索字符串中的匹配项，如果存在匹配则返回 Match 对象。</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> re.search(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;a&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">str</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x)</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># &lt;re.Match object; span=(4, 5), match=&#39;a&#39;&gt;</span></span></code></pre></div><h2 id="match-对象" tabindex="-1">Match 对象 <a class="header-anchor" href="#match-对象" aria-label="Permalink to &quot;Match 对象&quot;">​</a></h2><p>Match 对象是包含有关搜索和结果信息的对象。</p><p>**注释：**如果没有匹配，则返回值 <code>None</code>，而不是 Match 对象。</p><p>Match 对象提供了用于取回有关搜索及结果信息的属性和方法：</p><ul><li><code>span()</code> 返回的元组包含了匹配的开始和结束位置</li><li><code>.string</code> 返回传入函数的字符串</li><li><code>group()</code> 返回匹配的字符串部分</li></ul><h2 id="split-函数" tabindex="-1">split() 函数 <a class="header-anchor" href="#split-函数" aria-label="Permalink to &quot;split() 函数&quot;">​</a></h2><p><code>split()</code> 函数返回一个列表，其中字符串在每次匹配时被拆分</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> re.split(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;\\s&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">str</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x)</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># [&#39;China&#39;, &#39;is&#39;, &#39;a&#39;, &#39;great&#39;, &#39;country&#39;]</span></span></code></pre></div><p>您可以通过指定 <code>maxsplit</code> 参数来控制出现次数：</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> re.split(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;\\s&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">str</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x)</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># [&#39;China&#39;, &#39;is a great country&#39;]</span></span></code></pre></div><h2 id="sub-函数" tabindex="-1">sub() 函数 <a class="header-anchor" href="#sub-函数" aria-label="Permalink to &quot;sub() 函数&quot;">​</a></h2><p><code>sub()</code> 函数把匹配替换为您选择的文本：</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> re.sub(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;\\s&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;_&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">str</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x)</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># China_is_a_great_country</span></span></code></pre></div>`,29),n=[h];function l(p,k,d,r,o,c){return a(),i("div",null,n)}const y=s(e,[["render",l]]);export{E as __pageData,y as default};
