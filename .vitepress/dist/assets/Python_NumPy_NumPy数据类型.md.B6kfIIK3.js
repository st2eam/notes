import{_ as s,c as i,o as a,a4 as n}from"./chunks/framework.BtCE5x9j.js";const y=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"Python/NumPy/NumPy数据类型.md","filePath":"Python/NumPy/NumPy数据类型.md"}'),p={name:"Python/NumPy/NumPy数据类型.md"},h=n(`<h2 id="numpy-中的数据类型" tabindex="-1">NumPy 中的数据类型 <a class="header-anchor" href="#numpy-中的数据类型" aria-label="Permalink to &quot;NumPy 中的数据类型&quot;">​</a></h2><p>NumPy 有一些额外的数据类型，并通过一个字符引用数据类型，例如 <code>i</code> 代表整数，<code>u</code> 代表无符号整数等。</p><p>以下是 NumPy 中所有数据类型的列表以及用于表示它们的字符。</p><ul><li><code>i</code> - 整数</li><li><code>b</code> - 布尔</li><li><code>u</code> - 无符号整数</li><li><code>f</code> - 浮点</li><li><code>c</code> - 复合浮点数</li><li><code>m</code> - timedelta</li><li><code>M</code> - datetime</li><li><code>O</code> - 对象</li><li><code>S</code> - 字符串</li><li><code>U</code> - unicode 字符串</li><li><code>V</code> - 固定的其他类型的内存块 ( void )</li></ul><h3 id="检查数组的数据类型" tabindex="-1">检查数组的数据类型 <a class="header-anchor" href="#检查数组的数据类型" aria-label="Permalink to &quot;检查数组的数据类型&quot;">​</a></h3><p>NumPy 数组对象有一个名为 <code>dtype</code> 的属性，该属性返回数组的数据类型</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">arr </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> np.array([</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(arr.dtype)</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># int32</span></span></code></pre></div><h3 id="用已定义的数据类型创建数组" tabindex="-1">用已定义的数据类型创建数组 <a class="header-anchor" href="#用已定义的数据类型创建数组" aria-label="Permalink to &quot;用已定义的数据类型创建数组&quot;">​</a></h3><p>我们使用 <code>array()</code> 函数来创建数组，该函数可以使用可选参数：<code>dtype</code>，它允许我们定义数组元素的预期数据类型</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">arr </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> np.array([</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">], </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">dtype</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;S&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(arr)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(arr.dtype)</span></span></code></pre></div><p>对于 <code>i</code>、<code>u</code>、<code>f</code>、<code>S</code> 和 <code>U</code>，我们也可以定义大小。</p><p>创建数据类型为 8 字节整数的数组：</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">arr </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> np.array([</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">], </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">dtype</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;i8&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(arr)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(arr.dtype)</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># int64</span></span></code></pre></div><h3 id="假如值无法转换会怎样" tabindex="-1">假如值无法转换会怎样？ <a class="header-anchor" href="#假如值无法转换会怎样" aria-label="Permalink to &quot;假如值无法转换会怎样？&quot;">​</a></h3><p>如果给出了不能强制转换元素的类型，则 NumPy 将引发 <code>ValueError</code>。</p><p><code>ValueError</code>：在 Python 中，如果传递给函数的参数的类型是非预期或错误的，则会引发 <code>ValueError</code>。</p><h3 id="转换已有数组的数据类型" tabindex="-1">转换已有数组的数据类型 <a class="header-anchor" href="#转换已有数组的数据类型" aria-label="Permalink to &quot;转换已有数组的数据类型&quot;">​</a></h3><p>更改现有数组的数据类型的最佳方法，是使用 <code>astype()</code> 方法复制该数组。</p><p><code>astype()</code> 函数创建数组的副本，并允许您将数据类型指定为参数。</p><p>数据类型可以使用字符串指定，例如 <code>&#39;f&#39;</code> 表示浮点数，<code>&#39;i&#39;</code> 表示整数等。或者您也可以直接使用数据类型。</p><p>通过使用 <code>&#39;i&#39;</code> 作为参数值，将数据类型从浮点数更改为整数：</p><p>通过使用 <code>bool</code> 作为参数值，将数据类型从整数更改为布尔值:</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> numpy </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">as</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> np</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">arr </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> np.array([</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3.1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">newarr </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> arr.astype(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;i&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(newarr)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(newarr.dtype)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">newarr2 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> newarr.astype(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">bool</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(newarr2)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(newarr2.dtype)</span></span></code></pre></div>`,23),t=[h];function e(l,k,d,r,E,o){return a(),i("div",null,t)}const g=s(p,[["render",e]]);export{y as __pageData,g as default};
