import{_ as e,c as p,o as t,a4 as a,m as s,a as n}from"./chunks/framework.BtCE5x9j.js";const f=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"C++/QT/QT 样式表.md","filePath":"C++/QT/QT 样式表.md"}'),l={name:"C++/QT/QT 样式表.md"},o=a("",11),i=s("p",{"属性:":"","值;":""},[n("匹配所有flat属性是false的QPushButton实例，注意该属性可以是自定义的属性，不一定非要是类本身具有的属性"),s("br"),s("strong",null,"4.4 类选择器"),n(" 格式 .类名")],-1),c=s("p",{"属性:":"","值;":""},[n(".QPushButton 匹配所有QPushButton的实例，但是并不匹配其子类。这是与CSS中的类选择器不一样的地方，注意前面有一个点号 .RedButton { background: magenta; }"),s("br"),s("strong",null,"4.5 ID 选择器"),s("br"),n(" 格式 #id")],-1),r=s("p",null,"这里的 id 指的是 objectName, 每个 QObject 类及其派生类都有的一个属性, “#” + objectName",-1),d=s("p",{"background:":"","magenta;":""},"#myButton 匹配所有id为myButton的控件实例，这里的id实际上就是objectName指定的值 #openButton, #closeButton",-1),h=a("",14),u=[o,i,c,r,d,h];function b(g,_,Q,m,S,k){return t(),p("div",null,u)}const x=e(l,[["render",b]]);export{f as __pageData,x as default};
