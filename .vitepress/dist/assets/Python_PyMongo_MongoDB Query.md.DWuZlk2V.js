import{_ as s,c as i,o as a,a4 as t}from"./chunks/framework.BtCE5x9j.js";const c=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"Python/PyMongo/MongoDB Query.md","filePath":"Python/PyMongo/MongoDB Query.md"}'),h={name:"Python/PyMongo/MongoDB Query.md"},n=t(`<h2 id="mongodb-查询" tabindex="-1">MongoDB 查询 <a class="header-anchor" href="#mongodb-查询" aria-label="Permalink to &quot;MongoDB 查询&quot;">​</a></h2><p><code>find_one()</code> 方法返回选择中的第一个匹配项。</p><p><code>find()</code> 方法返回选择中的所有匹配项。</p><p>在集合中查找文档时，您能够使用 query 对象过滤结果。</p><p><code>find()</code> 方法的第一个参数是 query 对象，用于限定搜索。</p><p>查找地址为 &quot;Park Lane 38&quot; 的文档：</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">mydoc </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> mycol.find({ </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;address&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Park Lane 38&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> })</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> mydoc:</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x)</span></span></code></pre></div><h3 id="只返回某些字段" tabindex="-1">只返回某些字段 <a class="header-anchor" href="#只返回某些字段" aria-label="Permalink to &quot;只返回某些字段&quot;">​</a></h3><p><code>find()</code> 方法的第二个参数是描述包含在结果中字段的对象。</p><p>此参数是可选的，如果省略，则所有字段都将包含在结果中。</p><p>只返回姓名和地址，而不是 _ids：</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> mycol.find({},{ </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;_id&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;address&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }):</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x)</span></span></code></pre></div><h2 id="高级查询" tabindex="-1">高级查询 <a class="header-anchor" href="#高级查询" aria-label="Permalink to &quot;高级查询&quot;">​</a></h2><p>如需进行高级查询，可以使用修饰符作为查询对象中的值。</p><p>例如，要查找 &quot;address&quot; 字段以字母 &quot;S&quot; 或更高（按字母顺序）开头的文档，请使用大于修饰符：<code>{&quot;$gt&quot;: &quot;S&quot;}</code>：</p><p>查找地址以字母 &quot;S&quot; 或更高开头的文档：</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">mydoc </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> mycol.find({ </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;address&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: { </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;$gt&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;S&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } })</span></span></code></pre></div><h3 id="使用正则表达式来筛选" tabindex="-1">使用正则表达式来筛选 <a class="header-anchor" href="#使用正则表达式来筛选" aria-label="Permalink to &quot;使用正则表达式来筛选&quot;">​</a></h3><p>您也可以将正则表达式用作修饰符。</p><p>正则表达式只能用于查询字符串。</p><p>如果只查找 &quot;address&quot; 字段以字母 &quot;S&quot; 开头的文档，请使用正则表达式 <code>{&quot;$regex&quot;: &quot;^S&quot;}</code>：</p><p>查找地址以字母 &quot;S&quot; 开头的文档：</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">mydoc </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> mycol.find({ </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;address&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: { </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;$regex&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;^S&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } })</span></span></code></pre></div><h3 id="限定结果" tabindex="-1">限定结果 <a class="header-anchor" href="#限定结果" aria-label="Permalink to &quot;限定结果&quot;">​</a></h3><p>要限制 MongoDB 中的结果，我们使用 <code>limit()</code> 方法。</p><p><code>limit()</code> 方法接受一个参数，定义的数字表示返回的文档数。</p><p>把结果限定为只返回 5 个文档：</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">myresult </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> mycol.find().limit(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h3 id="结果排序" tabindex="-1">结果排序 <a class="header-anchor" href="#结果排序" aria-label="Permalink to &quot;结果排序&quot;">​</a></h3><p><code>sort()</code> 方法为 &quot;fieldname&quot;（字段名称）提供一个参数，为 &quot;direction&quot;（方向）提供一个参数（升序是默认方向）</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">sort(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 升序</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">sort(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 降序</span></span></code></pre></div><p>按姓名的字母顺序对结果进行排序：</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">mydoc </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> mycol.find().sort(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div>`,33),p=[n];function e(l,k,o,d,r,E){return a(),i("div",null,p)}const y=s(h,[["render",e]]);export{c as __pageData,y as default};
