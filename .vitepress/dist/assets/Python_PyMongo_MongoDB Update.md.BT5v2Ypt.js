import{_ as s,c as i,o as a,a4 as t}from"./chunks/framework.BtCE5x9j.js";const c=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"Python/PyMongo/MongoDB Update.md","filePath":"Python/PyMongo/MongoDB Update.md"}'),n={name:"Python/PyMongo/MongoDB Update.md"},e=t(`<h2 id="更新集合" tabindex="-1">更新集合 <a class="header-anchor" href="#更新集合" aria-label="Permalink to &quot;更新集合&quot;">​</a></h2><p>您可以使用 <code>update_one()</code> 方法来更新 MongoDB 中调用的记录或文档。</p><p><code>update_one()</code> 方法的第一个参数是 query 对象，用于定义要更新的文档。</p><p>注释：如果查询找到多个记录，则仅更新第一个匹配项。第二个参数是定义文档新值的对象。</p><p>把地址 &quot;Valley 345&quot; 改为 &quot;Canyon 123&quot;：</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">mycol.update_one({</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;address&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Valley 345&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">},</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                 {</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;$set&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;address&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Canyon 123&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}})</span></span></code></pre></div><h2 id="更新多个" tabindex="-1">更新多个 <a class="header-anchor" href="#更新多个" aria-label="Permalink to &quot;更新多个&quot;">​</a></h2><p>如需更新符合查询条件的所有文档，请使用 <code>update_many()</code> 方法。</p><p>更新地址以字母 &quot;S&quot; 开头的所有文档：</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> mycol.update_many({</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;address&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;$regex&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;^S&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}},</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                      {</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;$set&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Minnie&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}})</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x.modified_count, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;documents updated.&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div>`,10),h=[e];function p(l,o,k,d,E,r){return a(),i("div",null,h)}const y=s(n,[["render",p]]);export{c as __pageData,y as default};
